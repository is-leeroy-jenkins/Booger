<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Tools.Wpf.Classic</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipBorder">
            <summary>
            Border for the Balloon. 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.DEF_CORNERHEIGHT">
            <summary>
            Stores the corner height.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.m_path">
            <summary>
            Stores the path geometry.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.BackgroundProperty">
            <summary>
            Stores the Background color value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.BorderBrushProperty">
            <summary>
            Stores the BorderBrush value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.BorderThicknessProperty">
            <summary>
            Stores the BorderThickness value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.CornerRadiusProperty">
            <summary>
            Stores the CornerRadius value.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.ArrangeOverride(System.Windows.Size)">
            <summary>
            Arranges the content of a <see cref="T:System.Windows.Controls.Decorator"/> element.
            </summary>
            <param name="arrangeSize">The <see cref="T:System.Windows.Size"/> this element uses to arrange its child content.</param>
            <returns>
            The <see cref="T:System.Windows.Size"/> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator"/> element and its child.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.MeasureOverride(System.Windows.Size)">
            <summary>
            Measures the child elements of a <see cref="T:System.Windows.Controls.Border"/> before they are arranged during the <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)"/> pass.
            </summary>
            <param name="constraint">An upper <see cref="T:System.Windows.Size"/> limit that cannot be exceeded.</param>
            <returns>
            The <see cref="T:System.Windows.Size"/> that represents the upper size limit of the element.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.BorderBrush">
            <summary>
            Gets or sets the border brush.
            </summary>
            <value>The border brush.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
            <value>The border thickness.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTipBorder.CornerRadius">
            <summary>
            Gets or sets the corner radius.
            </summary>
            <value>The corner radius.</value>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTip">
            <summary>
            Represents the BalloonTip class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_showingTimer">
            <summary>
            Stores the Showing Timer value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_hidingTimer">
            <summary>
            Stores the hiding timer value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_popup">
            <summary>
            Stores the popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_showingAnimation">
            <summary>
            Stores the Animation value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_hidingAnimation">
            <summary>
            Stores the hiding animation value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_bAnimationInProress">
            <summary>
            Stores the animation in process value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_savedWidth">
            <summary>
            Stores the saved width value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_savedHeight">
            <summary>
            Stores the saved height value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.m_savedPlacementRect">
            <summary>
            Stores the saved placement rectangle.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Tools.Controls.BalloonTip"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.TaskBarDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.TaskBarDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderForegroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipIconProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipIcon"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipTextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipText"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipTitleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipTitle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipIconProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipIcon"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipTextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipText"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipTitleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipTitle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipLocationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipLocation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipShapeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipShape"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowBalloonTipTimeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowBalloonTipTime"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.HideBalloonTipTimeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HideBalloonTipTime"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipAnimationEffectProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipAnimationEffect"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomShowingAnimationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomShowingAnimation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomHidingAnimationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomHidingAnimation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomAnimatedPropertyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomAnimatedProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderImageProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderImage"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.IconTemplateProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.IconTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.IsOpenProperty">
            <summary>
            This property is responsible for the blink balloon tip
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipHeaderVisibilityProperty">
            <summary>
            This property is responsible for the visibility of balloon tip's header.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipText"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipText"/> property is changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> containing 
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipShapeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBalloonTipShapeChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipShapeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when balloon tip shape changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipTimeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBalloonTipTimeChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipTimeChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when balloon tip time changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipAnimationEffectChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBalloonTipAnimationEffectChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipAnimationEffectChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when balloon tip animation changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnCustomShowingAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCustomShowingAnimationChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnCustomShowingAnimationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when custom showing animation changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnCustomHidingAnimationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnCustomHidingAnimationChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnCustomHidingAnimationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when custom hiding animation changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.CoerceBalloonTipOpen(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the balloon tip open.
            </summary>
            <param name="d">Sender Object.</param>
            <param name="obj">Value to be coerced.</param>
            <returns>Coerced Value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.CoerceBalloonTipOpen(System.Object)">
            <summary>
            Coerces the balloon tip open.
            </summary>
            <param name="obj">The value to be Coerced.</param>
            <returns>Coerced value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnIsOpenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnIsOpenChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnIsOpenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:IsOpenChanged"/> event.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipHeaderVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBalloonTipHeaderVisibilityChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnBalloonTipHeaderVisibilityChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when balloon tip header visibility changes.
            </summary>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.StartShowingAnimation">
            <summary>
            Starts the showing animation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.StartHidingAnimation">
            <summary>
            Starts the hiding animation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.GetBalloonTipSize">
            <summary>
            Gets the size of the balloon tip.
            </summary>
            <returns>Returns the size</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.InitializeAnimetion">
            <summary>
            Initializes the animation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.UnsubscribeAnimation">
            <summary>
            Unsubscribe the animation.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.ClearInternalProperties">
            <summary>
            Clears the internal properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowBalloonTip(System.Int32)">
            <summary>
            Shows the balloon tip.
            </summary>
            <param name="timeToShow">The time in milliseconds</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowBalloonTip(System.Int32,System.String,System.String,Syncfusion.Windows.Tools.Controls.BalloonTipIcon)">
            <summary>
            Shows the balloon tip.
            </summary>
            <param name="timeToShow">The time in milliseconds</param>
            <param name="title">Stores the title.</param>
            <param name="text">Stores the text.</param>
            <param name="tipIcon">Stores the tip icon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.HideBalloonTip">
            <summary>
            Hides the balloon tip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.HideBalloonTip(System.Int32)">
            <summary>
            Hides the balloon tip.
            </summary>
            <param name="timeToHide">The time in milliseconds</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.FindPlacementRectangle">
            <summary>
            Finds the placement rectangle.
            </summary>
            <returns>Returns a rectangle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.FindBallonPlacementRectangle(System.Windows.Point,System.Windows.Size)">
            <summary>
            Finds the balloon placement rectangle.
            </summary>
            <param name="location">The location.</param>
            <param name="size">The size of the object.</param>
            <returns>Returns a rectangle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.FireCloseButtonClick(System.EventArgs)">
            <summary>
            Calls when balloon tip closes.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowingTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the ShowingTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.HidingTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the HidingTimer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowingAnimation_Completed(System.Object,System.EventArgs)">
            <summary>
            Handles the Completed event of the ShowingAnimation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.HidingAnimation_Completed(System.Object,System.EventArgs)">
            <summary>
            Handles the Completed event of the HidingAnimation control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.Popup_Opened(System.Object,System.EventArgs)">
            <summary>
            Handles the Opened event of the Popup control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.Popup_Closed(System.Object,System.EventArgs)">
            <summary>
            Handles the Closed event of the Popup control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnInitialized(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true internally.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when some dependencyProperty is changed.
            </summary>
            <param name="e">Event args.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTip.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp"/> routed event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. The event data reports that the mouse button was released.</param>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.TaskBarDirection">
            <summary>
            Gets or sets the task bar direction.
            </summary>
            <value>The task bar direction.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderBackground">
            <summary>
            Gets or sets the header background of the balloon tip. This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderForeground">
            <summary>
            Gets or sets the header foreground of the balloon tip. This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipIcon">
            <summary>
            Gets or sets the balloon tip icon.
            </summary>
            <value>The balloon tip icon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipText">
            <summary>
            Gets or sets the balloon tip text.
            </summary>
            <value>The balloon tip text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipTitle">
            <summary>
            Gets or sets the balloon tip title.
            </summary>
            <value>The balloon tip title.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipIcon">
            <summary>
            Gets or sets the Internal balloon tip icon.
            </summary>
            <value>The Internal balloon tip icon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipText">
            <summary>
            Gets or sets Internal the balloon tip text.
            </summary>
            <value>The balloon tip text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.InternalBalloonTipTitle">
            <summary>
            Gets or sets Internal the balloon tip title.
            </summary>
            <value>The balloon tip title.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipLocation">
            <summary>
            Gets or sets the balloon tip location.
            </summary>
            <value>The balloon tip location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipSize">
            <summary>
            Gets or sets the balloon tip size.
            </summary>
            <value>The balloon tip size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipShape">
            <summary>
            Gets or sets the balloon tip shape.
            </summary>
            <value>The balloon tip shape.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.ShowBalloonTipTime">
            <summary>
            Gets or sets the show balloon tip time in milliseconds.
            </summary>
            <value>The start balloon tip time.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HideBalloonTipTime">
            <summary>
            Gets or sets the hide balloon tip time in milliseconds.
            </summary>
            <value>The hide balloon tip time.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipAnimationEffect">
            <summary>
            Gets or sets the balloon tip animation effect.
            </summary>
            <value>The balloon tip animation effect.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomShowingAnimation">
            <summary>
            Gets or sets the custom balloon tip animation.
            </summary>
            <value>The custom balloon tip animation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomHidingAnimation">
            <summary>
            Gets or sets the custom hiding animation.
            </summary>
            <value>The custom hiding animation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.CustomAnimatedProperty">
            <summary>
            Gets or sets the custom animated property.
            </summary>
            <value>The custom animated property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.HeaderImage">
            <summary>
            Gets or sets the balloon tip header image.
            </summary>
            <value>The balloon tip header image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.IconTemplate">
            <summary>
            Gets or sets the icon template.
            </summary>
            <value>The icon template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.IsOpen">
            <summary>
            Gets or sets a value indicating whether IsOpenProperty is true.
            property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipHeaderVisibility">
            <summary>
            Gets or sets value of the BalloonTipHeaderVisibilityProperty dependency
            property.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipOpening">
            <summary>
            Occurs when [balloon tip is opening].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipOpened">
            <summary>
            Occurs when [balloon tip is opened].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipHiding">
            <summary>
            Occurs when [balloon tip is hiding].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.BalloonTipHidden">
            <summary>
            Occurs when [balloon tip is hidden].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.CloseButtonClick">
            <summary>
            Occurs when [close button click].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.BalloonTip.Click">
            <summary>
            Occurs when click is performed.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipHeader">
            <summary>
            Follow steps 1a or 1b and then 2 to use this custom control in a XAML file.
            Step 1a) Using this custom control in a XAML file that exists in the current project.
            Add this XmlNamespace attribute to the root element of the markup file where it is 
            to be used:
                xmlns:MyNamespace="clr-namespace:Syncfusion.Windows.Tools.Controls.NotifyIcon.Implementation"
            Step 1b) Using this custom control in a XAML file that exists in a different project.
            Add this XmlNamespace attribute to the root element of the markup file where it is 
            to be used:
                xmlns:MyNamespace="clr-namespace:Syncfusion.Windows.Tools.Controls.NotifyIcon.Implementation;assembly=Syncfusion.Windows.Tools.Controls.NotifyIcon.Implementation"
            You will also need to add a project reference from the project where the XAML file lives
            to this project and Rebuild to avoid compilation errors:
                Right click on the target project in the Solution Explorer and
                "Add Reference"->"Projects"->[Browse to and select this project]
            Step 2)
            Go ahead and use your control in the XAML file.
                <MyNamespace:BalloonTipHeader  xmlns:MyNamespace="http://schemas.syncfusion.com/wpf"/>
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.m_closeBtn">
            <summary>
            Stores the close button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.m_parent">
            <summary>
            Stores the parent.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Tools.Controls.BalloonTipHeader"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.HeaderImageProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.HeaderImage"/> dependency property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.CloseBtn_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the CloseBtn control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.BalloonTipHeader.HeaderImage">
            <summary>
            Gets or sets the balloon tip header image.
            </summary>
            <value>The balloon tip header image.</value>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipHeaderTemplateSelector">
            <summary>
            Class representing the Balloon tip header template selector
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipHeaderTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null. The default value is null.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipContentTemplateSelector">
            <summary>
            Selects the Balloon tip's content template.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.BalloonTipContentTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
            <summary>
            When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"/> based on custom logic.
            </summary>
            <param name="item">The data object for which to select the template.</param>
            <param name="container">The data-bound object.</param>
            <returns>
            Returns a <see cref="T:System.Windows.DataTemplate"/> or null. The default value is null.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.NotifyIcon">
            <summary>
            Specifies a component that creates an icon in the system notification area.
            Icons in the notification area are shortcuts to processes that are running in
            the background of a computer, such as a virus protection program or a volume
            control. These processes do not come with their own user interfaces. The
            NotifyIcon class provides a way to program in this functionality.
            </summary>
            <example>
            <code lang="XAML">
            <Window x:Class="NotifyIcon.Window1"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                Title="Window1" Height="300" Width="300"
            xmlns:syncfusion="http://schemas.syncfusion.com/wpf">
                <Grid>
                  <syncfusion:NotifyIcon Name="notifyIcon" BalloonTipText="Custom Notify
            Icon is Available"         BalloonTipTitle="Default NotifyIcon"
            ShowBalloonTipTime="1000" HideBalloonTipTime="1000">
                    </syncfusion:NotifyIcon>
                </Grid>
            </Window>
            </code>
            <code lang="C#">
            using System;
            using System.Collections.Generic;
            using System.Linq;
            using System.Text;
            using System.Windows;
            using System.Windows.Controls;
            using System.Windows.Data;
            using System.Windows.Documents;
            using System.Windows.Input;
            using System.Windows.Media;
            using System.Windows.Media.Imaging;
            using System.Windows.Navigation;
            using System.Windows.Shapes;
            using Syncfusion.Windows.Tools.Controls;
            namespace NotifyIcon 
            {
                /// <summary>
                /// Interaction logic for Window1.xaml
                /// </summary>
                public partial class Window1 : Window
                {
                    public Window1()
                    {
                        InitializeComponent();
                        NotifyIcon notifyIcon = new NotifyIcon();
                        notifyIcon.BalloonTipText = "Custom Notify Icon is Available";
                        notifyIcon.BalloonTipTitle = "Default NotifyIcon";
                        notifyIcon.ShowBalloonTipTime = 1000;
                        notifyIcon.HideBalloonTipTime = 1000;
                        this.Content = notifyIcon;
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.dEF_ICONRECTPADDING">
            <summary>
            Stores the icon's rectangle padding
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_internalIcon">
            <summary>
            Stores the internal icon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_imSorceConverter">
            <summary>
            Stores the converter.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_ctrlInternal">
            <summary>
            Stores the internal control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_toolTip">
            <summary>
            Stores the tooltip.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_ballon">
            <summary>
            Stores the balloon.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_bToolTipRectresult">
            <summary>
            Stores the show in Taskbar.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.m_savedIconRect">
            <summary>
            Note: Influenced real rect.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.Windows.Tools.Controls.NotifyIcon"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.Controls.NotifyIcon"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.TaskBarDirectionProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.TaskBarDirection"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DefaultBackgroundProperty">
            <summary>
            Identifies the DefaultBackground dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DefaultForegroundProperty">
            <summary>
            Identifies the DefaultForeground dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DefaultBorderBrushProperty">
            <summary>
            Identifies the DefaultBorderBrush dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderBackgroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderBackground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderForegroundProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderForeground"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DefaultHeaderBackgroundProperty">
            <summary>
            Identifies the DefaultHeaderBackground dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DefaultHeaderForegroundProperty">
            <summary>
            Identifies the DefaultHeaderForeground dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIconProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipText"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTitleProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTitle"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.TextProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.Text"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.Icon"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipLocationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipLocation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipSizeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipSize"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipShapeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipShape"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowBalloonTipTimeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowBalloonTipTime"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.HideBalloonTipTimeProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HideBalloonTipTime"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipAnimationEffectProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipAnimationEffect"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomShowingAnimationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomShowingAnimation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomHidingAnimationProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomHidingAnimation"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomAnimatedPropertyProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomAnimatedProperty"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderImageProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderImage"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconTemplateProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.ToolTipTemplateProperty">
            <summary>
            Identifies the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ToolTipTemplate"/> dependency property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.IsToolTipOpenProperty">
            <summary>
            This property is responsible for the blink popup.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipHeaderVisibilityProperty">
            <summary>
            This property is responsible for the visibility of balloon tip's header.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Dispatcher_ShutdownFinished(System.Object,System.EventArgs)">
            <summary>
            Handles the ShutdownFinished event of the Dispatcher control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipIconChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipIconChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> property is changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> containing 
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipText"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipTextChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipText"/> property is changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> containing 
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipTitleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTitle"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipTitleChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTitle"/> property is changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> containing 
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnIconChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> property is changed.
            </summary>
            <param name="d">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnIconChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked whenever the <see cref="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon"/> property is changed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> containing 
            the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipHeaderVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Calls OnBalloonTipHeaderVisibilityChanged method of the instance,
            notifies of the dependency property value changes.
            </summary>
            <param name="d">Dependency object, the change occurs on.</param>
            <param name="e">Property changes details, such as old value
            and new value.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnBalloonTipHeaderVisibilityChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises the <see cref="E:BalloonTipHeaderVisibilityChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.CoerceIsToolTipOpen(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the balloon tip open.
            </summary>
            <param name="d">Sender object.</param>
            <param name="obj">The object.</param>
            <returns>Coerced Value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.CoerceIsToolTipOpen(System.Object)">
            <summary>
            Coerces the is tool tip open.
            </summary>
            <param name="obj">sender object.</param>
            <returns>Coerced value</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.UpdateIcon">
            <summary>
            Updates the icon.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.UpdateIconInTaskBar">
            <summary>
            Updates the icon in task bar.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowBalloonTip(System.Int32)">
            <summary>
            Shows the balloon tip.
            </summary>
            <param name="timeToShow">The time in milliseconds</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowBalloonTip(System.Int32,System.String,System.String,Syncfusion.Windows.Tools.Controls.BalloonTipIcon)">
            <summary>
            Shows the balloon tip.
            </summary>
            <param name="timeToShow">The time in milliseconds</param>
            <param name="title">The title value.</param>
            <param name="text">The text value.</param>
            <param name="tipIcon">The tip icon.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.HideBalloonTip">
            <summary>
            Hides the balloon tip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.HideBalloonTip(System.Int32)">
            <summary>
            Hides the balloon tip.
            </summary>
            <param name="timeToHide">The time in milliseconds</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.InitializeInternalControl">
            <summary>
            Initializes the internal control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.InitializeToolTip">
            <summary>
            Initializes the tool tip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.InitializeBalloonTip">
            <summary>
            Initializes the balloon tip.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.ToolTip_Opened(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Opened event of the ToolTip control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the Balloon control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_BalloonTipOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the BalloonTipOpening event of the Balloon control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_BalloonTipOpened(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ballon_s the balloon tip opened.
            </summary>
            <param name="d">Sender object.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_BalloonTipHiding(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Handles the BalloonTipHiding event of the Balloon control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_BalloonTipHidden(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Ballon_s the balloon tip hidden.
            </summary>
            <param name="d">Sender object</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.Ballon_CloseButtonClick(System.Object,System.EventArgs)">
            <summary>
            Handles the CloseButtonClick event of the Balloon control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnClick(System.Object,System.EventArgs)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnRaiseEvent(System.Windows.RoutedEvent,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when [raise event].
            </summary>
            <param name="handler">The handler.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnRaiseEvent(System.Windows.RoutedEvent,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when [raise event].
            </summary>
            <param name="handler">The handler.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnMouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse double click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowContextMenu">
            <summary>
            Shows the context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.ToMouseButton(System.Windows.Forms.MouseButtons)">
            <summary>
            Toes the mouse button.
            </summary>
            <param name="button">The button.</param>
            <returns>MouseButton object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.GetTaskBarDirestion">
            <summary>
            Gets the task bar direction
            </summary>
            <returns>Returns taskbarDirection</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.FindIconRectInTray">
            <summary>
            Finds the icon rect in tray.
            </summary>
            <returns>Returns rectangle</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.GetScreenShot(System.IntPtr,System.Windows.Size)">
            <summary>
            Gets the screen shot.
            </summary>
            <param name="winHandle">The handle of the window, from which screenshot have to be made.</param>
            <param name="bounds">The bounds of the screenshot.</param>
            <returns>Bitmap from select object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.CheckIfColorIsBlack(System.Int32)">
            <summary>
            Checks if color is black.
            </summary>
            <param name="color">The color.</param>
            <returns>Returns Boolean</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.GetToolTipSize">
            <summary>
            Gets the size of the tool tip.
            </summary>
            <returns>Returns Size</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.NotifyIcon.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"/> routed event reaches this class in its route. Implement this method to add class handling for this event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.ClickCommandProperty">
            <summary>
            Using a dependency property as the backing store for click command which will be executed when the source command is invoked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DoubleClickCommandProperty">
            <summary>
            Using a dependency property as the backing store for double click command which will be executed when the source command is invoked.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.ClickCommandParameterProperty">
            <summary>
            Using a dependency property as the backing store for click command parameter which represents a user defined data attribute that may be transferred to the command when it is executed.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.NotifyIcon.DoubleClickCommandParameterProperty">
            <summary>
            Using a dependency property as the backing store for double click command parameter which represents a user defined data attribute that may be transferred to the command when it is executed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.TaskBarDirection">
            <summary>
            Gets or sets the task bar direction.
            </summary>
            <value>The task bar direction.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderBackground">
            <summary>
            Gets or sets the header background of the balloon tip. This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderForeground">
            <summary>
            Gets or sets the header foreground of the balloon tip. This is a dependency property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.InternalIcon">
            <summary>
            Gets the internal icon.
            </summary>
            <value>The internal icon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipIcon">
            <summary>
            Gets or sets the balloon tip icon.
            </summary>
            <value>The balloon tip icon.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipText">
            <summary>
            Gets or sets the balloon tip text.
            </summary>
            <value>The balloon tip text.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipTitle">
            <summary>
            Gets or sets the balloon tip title.
            </summary>
            <value>The balloon tip title.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.Text">
            <summary>
            Gets or sets the text.
            </summary>      
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.Icon">
            <summary>
            Gets or sets the icon to be displayed.
            </summary>        
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipLocation">
            <summary>
            Gets or sets the balloon tip location.
            </summary>
            <value>The balloon tip location.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipSize">
            <summary>
            Gets or sets the balloon tip size.
            </summary>
            <value>The balloon tip size.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipShape">
            <summary>
            Gets or sets the balloon tip shape.
            </summary>
            <value>The balloon tip shape.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowBalloonTipTime">
            <summary>
            Gets or sets the show balloon tip time in milliseconds.
            </summary>
            <value>The start balloon tip time.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HideBalloonTipTime">
            <summary>
            Gets or sets the hide balloon tip time in milliseconds.
            </summary>
            <value>The hide balloon tip time.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipAnimationEffect">
            <summary>
            Gets or sets the balloon tip animation effect.
            </summary>
            <value>The balloon tip animation effect.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomShowingAnimation">
            <summary>
            Gets or sets the custom showing animation.
            </summary>
            <value>The custom showing animation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomHidingAnimation">
            <summary>
            Gets or sets the custom hiding animation.
            </summary>
            <value>The custom hiding animation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.CustomAnimatedProperty">
            <summary>
            Gets or sets the custom animated property.
            </summary>
            <value>The custom animated property.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.HeaderImage">
            <summary>
            Gets or sets the balloon tip header image.
            </summary>
            <value>The balloon tip header image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconTemplate">
            <summary>
            Gets or sets the icon template.
            </summary>
            <value>The icon template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ToolTipTemplate">
            <summary>
            Gets or sets the tooltip template.
            </summary>
            <value>The icon template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.IsToolTipOpen">
            <summary>
            Gets or sets a value indicating whether ToolTipOpenProperty is true or false.
            property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ShowInTaskBar">
            <summary>
            Gets or sets a value indicating whether to show icon in taskbar.
            </summary>
            <value><c>true</c> if show in task bar; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipHeaderVisibility">
            <summary>
            Gets or sets value of the BalloonTipHeaderVisibilityProperty dependency
            property.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipOpening">
            <summary>
            Occurs when [balloon tip is opening].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipOpened">
            <summary>
            Occurs when [balloon tip is opened].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipHiding">
            <summary>
            Occurs when [balloon tip is hiding].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.BalloonTipHidden">
            <summary>
            Occurs when [balloon tip is hidden].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.CloseButtonClick">
            <summary>
            Occurs when [close button click].
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.Click">
            <summary>
            Occurs when click is performed.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconClick">
            <summary>
            Occurs when icon is clicked.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.NotifyIcon.IconDoubleClick">
            <summary>
            Occurs when icon is double clicked.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ClickCommand" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Windows.Tools.Controls.NotifyIcon.DoubleClickCommand" -->
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.ClickCommandParameter">
            <summary>
            Gets or sets the click command parameter to pass to the click command property.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.NotifyIcon.DoubleClickCommandParameter">
            <summary>
            Gets or sets the double click command parameter to pass to the double click command property.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.ImageSourceToIconConverter">
            <summary>
            Represents the Image Source To IconConverter class
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.ImageSourceToIconConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts ImageSource to System.Drawing.Icon
            </summary>
            <param name="value">ImageSource to be converted.</param>
            <param name="targetType">Target type of the object</param>
            <param name="parameter">Does not matter.</param>
            <param name="culture">Currently used culture. Not used here.</param>
            <returns>
            Converted icon.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.ImageSourceToIconConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
            <param name="value">The value that is produced by the binding target.</param>
            <param name="targetType">The type to convert to.</param>
            <param name="parameter">The converter parameter to use.</param>
            <param name="culture">The culture to use in the converter.</param>
            <returns>
            A converted value. If the method returns null, the valid null value is used.
            </returns>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipIcon">
            <summary>
            Enum for BalloonTipIcon
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipIcon.None">
            <summary>
            BalloonTipIcon is none.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipIcon.Error">
            <summary>
            BalloonTipIcon is Error.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipIcon.Warning">
            <summary>
            BalloonTipIcon is Warning.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipIcon.Info">
            <summary>
            BalloonTipIcon is Info.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipIcon.Custom">
            <summary>
            BalloonTipIcon is Custom.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipShapes">
            <summary>
            Enum for BalloonTipShapes
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipShapes.RoundedRectangle">
            <summary>
            BalloonTipShape is RoundedRectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipShapes.Rectangle">
            <summary>
            BalloonTipShape is Rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipShapes.Balloon">
            <summary>
            BalloonTipShape is Balloon
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.BalloonTipAnimationEffects">
            <summary>
            Enum for BalloonTipAnimationEffects
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipAnimationEffects.Slide">
            <summary>
            BalloonTipAnimationEffect is Slide
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipAnimationEffects.Scale">
            <summary>
            BalloonTipAnimationEffect is Scale
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipAnimationEffects.Fade">
            <summary>
            BalloonTipAnimationEffect is Fade
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.BalloonTipAnimationEffects.Custom">
            <summary>
            BalloonTipAnimationEffect is Custom
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.offset">
            <summary>
            Member Variable for the offset
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.actualheight">
            <summary>
            Member Variable for the actual height
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.PanelheightProperty">
            <summary>
            Dependency property for panel height
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement"/>-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"/> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.calculate(System.Double)">
            <summary>
            Calculates the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.LabelOrientation">
            <summary>
            Gets or sets the label orientation.
            </summary>
            <value>The label orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.XOffset">
            <summary>
            Gets or sets the X offset.
            </summary>
            <value>The X offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.YOffsetDown">
            <summary>
            Gets or sets the Y offset down.
            </summary>
            <value>The Y offset down.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.PanelWidth">
            <summary>
            Gets or sets the width of the panel.
            </summary>
            <value>The width of the panel.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.PanelHeight">
            <summary>
            Gets or sets the height of the panel.
            </summary>
            <value>The height of the panel.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.IsItem">
            <summary>
            Gets or sets a value indicating whether this instance is item.
            </summary>
            <value><c>true</c> if this instance is item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.UpOrientation">
            <summary>
            Gets or sets a value indicating whether [up orientation].
            </summary>
            <value><c>true</c> if [up orientation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.CustomItems">
            <summary>
            Gets or sets the custom items.
            </summary>
            <value>The custom items.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelLabel.Panelheight">
            <summary>
            Gets or sets the panelheight.
            </summary>
            <value>The panelheight.</value>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Itemorientation">
            <summary>
            Orientation the item
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Itemorientation.AboveTicks">
            <summary>
            Above the ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Itemorientation.InBetweenTicks">
            <summary>
            Between the ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.offset">
            <summary>
            Member Variable for the offset
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.MeasureOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement"/>-derived class.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.ArrangeOverride(System.Windows.Size)">
            <summary>
            When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"/> derived class.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.calculate(System.Double)">
            <summary>
            Calculates the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.LabelOrientation">
            <summary>
            Gets or sets the label orientation.
            </summary>
            <value>The label orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.XOffset">
            <summary>
            Gets or sets the X offset.
            </summary>
            <value>The X offset.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.YOffsetDown">
            <summary>
            Gets or sets the Y offset down.
            </summary>
            <value>The Y offset down.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.PanelWidth">
            <summary>
            Gets or sets the width of the panel.
            </summary>
            <value>The width of the panel.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.PanelHeight">
            <summary>
            Gets or sets the height of the panel.
            </summary>
            <value>The height of the panel.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.UpOrientation">
            <summary>
            Gets or sets a value indicating whether [up orientation].
            </summary>
            <value><c>true</c> if [up orientation]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.IsItem">
            <summary>
            Gets or sets a value indicating whether this instance is item.
            </summary>
            <value><c>true</c> if this instance is item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.CustomPanelTicks.CustomItems">
            <summary>
            Gets or sets the custom items.
            </summary>
            <value>The custom items.</value>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.DoubleRange">
            <summary>
            DoubleRange Class. A class with two values Start and End of type double. It is used for determining the range of RangeSlider Control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.DoubleRange.Empty">
            <summary>
            Member static Variable for the range which is not empty
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.DoubleRange.end">
            <summary>
            Member Variable for the end
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.DoubleRange.start">
            <summary>
            Member Variable for the start
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRange.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.Controls.DoubleRange"/> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.Controls.DoubleRange"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRange.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.DoubleRange.Start">
            <summary>
            Gets or sets the start.
            </summary>
            <value>The start.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.DoubleRange.End">
            <summary>
            Gets or sets the end.
            </summary>
            <value>The end.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.DoubleRange.IsEmpty">
            <summary>
            Gets or sets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.DoubleRange.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.DoubleRangeConverter.C_separator">
            <summary>
            Member Variable for the seperator
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.DoubleRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Items">
            <summary>
            Items Class for Custom Label support
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Items.m_label">
            <summary>
            Gets or sets the label.
            </summary>
            <value>The label.</value>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Items.m_value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Tickplacement">
            <summary>
            Represent the Ticks placement
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.Top">
            <summary>
            At the Top
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.Down">
            <summary>
            At the bottom
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.Left">
            <summary>
            At the left
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.Right">
            <summary>
            At the right
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.None">
            <summary>
            No Placement
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.Tickplacement.Both">
            <summary>
            On the both side
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.rectOrdinates">
            <summary>
            Internal variable for rectangle ordinates
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.oldvalue">
            <summary>
            Internal variable for old value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.newvalue">
            <summary>
            Internal variable for new value
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumb1focus">
            <summary>
            Internal variable for thumb1 focus
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumb2focus">
            <summary>
            Internal variable for thumb2 focus
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeProperty">
            <summary>
            Represent the range, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeFillProperty">
            <summary>
            Represent the rande fill, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CustomPanelWidthProperty">
            <summary>
            Represent the custom panel width, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalLeftRepeatButtonTemplateProperty">
            <summary>
            Represent the horizontal left repeat button template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalRightRepeatButtonTemplateProperty">
            <summary>
            Represent the horizontal right repeat buttin template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalTopRepeatButtonTemplateProperty">
            <summary>
            Represent the vertical top repeat button template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalDownRepeatButtonTemplateProperty">
            <summary>
            Represent the vertical bottom repeat buttin template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsThumbSelectedProperty">
            <summary>
            Represent the is thum selected, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SetCustomLabelProperty">
            <summary>
            Represent the set custom label, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ItemsCollectionProperty">
            <summary>
            Represent the items collection, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalThumbTemplateProperty">
            <summary>
            Represent the horizontal thumb template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalThumbTemplateProperty">
            <summary>
            Represent the vertical thumb template, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LabelVisibilityProperty">
            <summary>
            Represent the label visibility, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LabelOrientationProperty">
            <summary>
            Represent the label orientation, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.TickPlacementProperty">
            <summary>
            Represent the tick placement, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.MoveToHandleProperty">
            <summary>
            Represent the move to handle, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeVisibilityProperty">
            <summary>
            Represent the range visibility, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.OrientationProperty">
            <summary>
            Represent the orientation, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlHeightProperty">
            <summary>
            Represent the control height, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.TickFrequencyProperty">
            <summary>
            Represent the trick frequency, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.UniformChangeProperty">
            <summary>
            Represent the uniform change, this is a dependency property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LargeChangeProperty">
            <summary>
            Represent the large change, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeValueProperty">
            <summary>
            Represent the range value, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ValueProperty">
            <summary>
            Represent the value, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.MinimumValueProperty">
            <summary>
            Represent the minimum value, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.MaximumValueProperty">
            <summary>
            Represent the maximum value, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HandleButtonVisibilityProperty">
            <summary>
            Represent the handle button visibility, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlWidthProperty">
            <summary>
            Represent the control width, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlGridHeightProperty">
            <summary>
            Represent the control grid height, Dependency Property
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsSnapToTickEnabledProperty">
            <summary>
            Represents the IsSnapToTickEnabled Dependency Property.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SelectedThumbProperty">
            <summary>
            Represents the SelectedThumb Dependency Property.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.GetThumbSelectedProperty(System.Windows.DependencyObject)">
            <summary>
            Gets the thumb selected property.
            </summary>
            <param name="target">The target.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SetThumbSelectedProperty(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the thumb selected property.
            </summary>
            <param name="target">The target.</param>
            <param name="value">if set to <c>true</c> [value].</param>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeChangedEvent">
            <summary>
            Occurs when [range changed].
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ValueChangedEvent">
            <summary>
            Occurs when [value changed].
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.#cctor">
            <summary>
            Initializes the <see cref="T:Syncfusion.Windows.Tools.Controls.RangeSliderControl"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.Controls.RangeSliderControl"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumb">
            <summary>
            Local variable which represents thumbs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumbsecond">
            <summary>
            Local variable which represents thumbs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalthumb">
            <summary>
            Local variable which represents thumbs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalthumbsecond">
            <summary>
            Local variable which represents thumbs
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.rect">
            <summary>
            Local variable which represents rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.trackrect">
            <summary>
            Local variable which represents rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalrect">
            <summary>
            Local variable which represents rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticaltrackrect">
            <summary>
            Local variable which represents rectangle
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.incButton">
            <summary>
            Local variable which represents repeat button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.decButton">
            <summary>
            Local variable which represents repeat button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.backButton">
            <summary>
            Local variable which represents repeat button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.rectButton">
            <summary>
            Local variable which represents repeat button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalrectButton">
            <summary>
            Local variable which represents repeat button
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalincButton">
            <summary>
            Local variable which represents repeat button vertical
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticaldecButton">
            <summary>
            Local variable which represents repeat button vertical
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalbackButton">
            <summary>
            Local variable which represents repeat button vertical
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.panelVerticalLeft">
            <summary>
            Local variable which represents panel vertical
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.vertical">
            <summary>
            Local variable which represents grid poitions
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.horizontal">
            <summary>
            Local variable which represents grid poitions
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.main">
            <summary>
            Local variable which represents grid poitions
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SliderGrid">
            <summary>
            Local variable which represents grid poitions
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.can1">
            <summary>
            Local variable which represents the canvas
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalcan1">
            <summary>
            Local variable which represents the canvas
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompanel">
            <summary>
            Local variable which represents custom panel ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompaneldown">
            <summary>
            Local variable which represents custom panel ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompanelvertical">
            <summary>
            Local variable which represents custom panel ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompanelverticaldown">
            <summary>
            Local variable which represents custom panel ticks
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompanellabel">
            <summary>
            Local variable which represents custom panel label
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.custompanellabeldown">
            <summary>
            Local variable which represents custom panel label
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CustomPanelVerticalLabel">
            <summary>
            Local variable which represents custom panel label
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CustomPanelVerticalLabelDown">
            <summary>
            Local variable which represents custom panel label
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.controlBorder">
            <summary>
            Local variable which represents border
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ordinates">
            <summary>
            Local variable which represents points
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlGridWidth">
            <summary>
            Local variable which represents control width
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.minimumValue">
            <summary>
            Local variable which is used to store the temp minimum value.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.minimumvaluechanged">
            <summary>
            Local variable which is used to check whether the temp minimum value updated or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.m_isLimitExceeded">
            <summary>
            Local variable represents the Limit Exceeded flag used in Snap To Ticks.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.m_lastTickWidth">
            <summary>
            Local variable represents the last two ticks interval.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Tools.Controls.RangeSliderControl.m_lastTickHeight">
            <summary>
            Local variable represents the last two ticks interval.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Coerse(System.Collections.ObjectModel.ObservableCollection{Syncfusion.Windows.Tools.Controls.Items})">
            <summary>
            Coerses the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Range_PropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Handles the PropertyChanged event of the Range control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalrectButton_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the MouseEnter event of the verticalrectButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalrectButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the verticalrectButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.rectButton_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the MouseEnter event of the rectButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.rectButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the rectButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumbsecond_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseLeftButtonUp event of the thumbsecond control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumb_MouseLeftButtonUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseLeftButtonUp event of the thumb control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ArrangeSlider">
            <summary>
            Arranges the slider.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.main_SizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event of the main control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.SizeChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.PopulateChildren">
            <summary>
            Populates the children.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddLabel">
            <summary>
            Adds the label.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddLabelVertical">
            <summary>
            Adds the label vertical.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddLabelVerticalDown">
            <summary>
            Adds the label vertical down.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddLabelDown">
            <summary>
            Adds the label down.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeSlider_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event of the RangeSlider control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddChildrenVerticalDown">
            <summary>
            Adds the children vertical down.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddChildrenVertical">
            <summary>
            Adds the children vertical.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddChildren">
            <summary>
            Adds the children.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.AddChildrendown">
            <summary>
            Adds the childrendown.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.decButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the decButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.backButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the backButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalbackButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the verticalbackButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalbackButton_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the MouseEnter event of the verticalbackButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.backButton_MouseEnter(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the MouseEnter event of the backButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumbDragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Thumbs the drag delta.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalthumb_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Handles the DragDelta event of the verticalthumb control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.backButton_MouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Handles the MouseMove event of the backButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.incButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the incButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalincButton_Click(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Click event of the verticalincButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.RoutedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumb_MouseLeftButtonDown(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Handles the MouseLeftButtonDown event of the thumb control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.thumbSecondDragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Thumbs the second drag delta.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.verticalthumbsecond_DragDelta(System.Object,System.Windows.Controls.Primitives.DragDeltaEventArgs)">
            <summary>
            Handles the DragDelta event of the verticalthumbsecond control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Calculate(System.Double)">
            <summary>
            Calculates the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CalculateRange(System.Double)">
            <summary>
            Calculates the range.
            </summary>
            <param name="value1">The value1.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CalculateUniformRange(System.Double)">
            <summary>
            Calculates the uniform range.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalCalculate(System.Double)">
            <summary>
            Verticals the calculate.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalCalculateRange(System.Double)">
            <summary>
            Verticals the calculate range.
            </summary>
            <param name="value1">The value1.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalCalculateUniformRange(System.Double)">
            <summary>
            Verticals the calculate uniform range.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsRangeValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is range value changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsRangeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is range changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.OnRangeChanged(Syncfusion.Windows.Tools.Controls.DoubleRange,Syncfusion.Windows.Tools.Controls.DoubleRange)">
            <summary>
            
            </summary>
            <param name="oldRange"></param>
            <param name="newRange"></param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is orientation changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsHandleVisibiltyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is handle visibilty changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsTickFrequencyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is tick frequency changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsTickPlacementChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is tick placement changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsUniformChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is uniform changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsMinimumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is minimum changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsMaximumChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is maximum changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsMoveToHandleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is move to handle changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CoerceTickFrequencyValue(System.Windows.DependencyObject,System.Object)">
            <summary>
            Coerces the tick frequency value.
            </summary>
            <param name="o">The o.</param>
            <param name="baseValue">The base value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CoerceTickFrequencyValue(System.Object)">
            <summary>
            Coerces the tick frequency value.
            </summary>
            <param name="baseValue">The base value.</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is value changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.OnValueChanged(System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsRangeVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is range visibility changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsLabelOrientationChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is label orientation changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsLabelVisibilityChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is label visibility changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsItemsChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is items changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsItemsCollectionChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is items collection changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsSetCustomLabelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Determines whether [is set custom label changed] [the specified o].
            </summary>
            <param name="o">The o.</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Dispose">
            <summary>
            Method to dispose unused objects
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SelectedThumb">
            <summary>
            Gets or sets the SelectedThumb
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Range">
            <summary>
            Gets or sets the range.
            </summary>
            <value>The range.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeFill">
            <summary>
            Gets or sets the range fill.
            </summary>
            <value>The range fill.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.CustomPanelWidth">
            <summary>
            Gets or sets the width of the custom panel.
            </summary>
            <value>The width of the custom panel.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalLeftRepeatButtonTemplate">
            <summary>
            Gets or sets the horizontal left repeat button template.
            </summary>
            <value>The horizontal left repeat button template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalRightRepeatButtonTemplate">
            <summary>
            Gets or sets the horizontal right repeat button template.
            </summary>
            <value>The horizontal right repeat button template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalTopRepeatButtonTemplate">
            <summary>
            Gets or sets the vertical top repeat button template.
            </summary>
            <value>The vertical top repeat button template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalDownRepeatButtonTemplate">
            <summary>
            Gets or sets the vertical down repeat button template.
            </summary>
            <value>The vertical down repeat button template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HorizontalThumbTemplate">
            <summary>
            Gets or sets the horizontal thumb template.
            </summary>
            <value>The horizontal thumb template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.VerticalThumbTemplate">
            <summary>
            Gets or sets the vertical thumb template.
            </summary>
            <value>The vertical thumb template.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.SetCustomLabel">
            <summary>
            Gets or sets a value indicating whether [set custom label].
            </summary>
            <value><c>true</c> if [set custom label]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ItemsCollection">
            <summary>
            Gets or sets the items collection.
            </summary>
            <value>The items collection.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LabelVisibility">
            <summary>
            Gets or sets a value indicating whether [label visibility].
            </summary>
            <value><c>true</c> if [label visibility]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LabelOrientation">
            <summary>
            Gets or sets the label orientation.
            </summary>
            <value>The label orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.TickPlacement">
            <summary>
            Gets or sets the tick placement.
            </summary>
            <value>The tick placement.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.MoveToHandle">
            <summary>
            Gets or sets a value indicating whether [move to handle].
            </summary>
            <value><c>true</c> if [move to handle]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeVisibility">
            <summary>
            Gets or sets a value indicating whether [range visibility].
            </summary>
            <value><c>true</c> if [range visibility]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlWidth">
            <summary>
            Gets or sets the width of the control.
            </summary>
            <value>The width of the control.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlHeight">
            <summary>
            Gets or sets the height of the control.
            </summary>
            <value>The height of the control.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.TickFrequency">
            <summary>
            Gets or sets the tick frequency.
            </summary>
            <value>The tick frequency.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.HandleButtonVisibility">
            <summary>
            Gets or sets the handle button visibility.
            </summary>
            <value>The handle button visibility.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.UniformChange">
            <summary>
            Gets or sets the uniform change.
            </summary>
            <value>The uniform change.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.LargeChange">
            <summary>
            Gets or sets the large change.
            </summary>
            <value>The large change.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeValue">
            <summary>
            Gets or sets the range value.
            </summary>
            <value>The range value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Minimum">
            <summary>
            Gets or sets the minimum.
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.Maximum">
            <summary>
            Gets or sets the maximum.
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ControlGridHeight">
            <summary>
            Gets or sets the height of the control grid.
            </summary>
            <value>The height of the control grid.</value>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.IsSnapToTickEnabled">
            <summary>
            Gets or Sets a Value, indicates, whether the Is Snap To Tick Property is true or false.
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.RangeSliderControl.RangeChanged">
            <summary>
            Add / Remove RangeChangedEvent handler
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Tools.Controls.RangeSliderControl.ValueChanged">
            <summary>
            Add / Remove ValueChangedEvent handler
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.DifferenceWidth">
            <summary>
            Local property which gets the width between two ticks.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.RangeSliderControl.DifferenceHeight">
            <summary>
            Local property which gets the height between two ticks.
            </summary>
        </member>
        <member name="T:Syncfusion.ToolsWPFAssembly">
            <summary>
            Represents the Tools WPF Assembly
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.ToolsWPFAssembly.Name">
            <summary>
            Represents the Assembly Name
            </summary>
        </member>
        <member name="F:Syncfusion.ToolsWPFAssembly.Assembly">
            <summary>
            Represents the Assembly
            </summary>
        </member>
        <member name="F:Syncfusion.ToolsWPFAssembly.RootNamespace">
            <summary>
            Represents the Root Name Space
            </summary>
        </member>
        <member name="M:Syncfusion.ToolsWPFAssembly.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.ToolsWPFAssembly"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.AssemblyInfo">
            <summary>
            Represents the Assembly Info class
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Resources.ResourceWrapper">
            <summary>
            Maintains the string constant to access the localized text in xaml file and code behind.
            </summary>
            <exclude />
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.ResourceWrapper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Windows.Tools.Controls.Resources.ResourceWrapper"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Resources.SR">
            <summary>
            SR provides localized access to string resources from the Syncfusion.Tools.Wpf.Classic.resx file.
            </summary>
            <exclude />
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.SetResources(System.Reflection.Assembly,System.String)">
            <summary>
            Sets the resource manager based on the assembly and namespace.
            It can be used to get the values from the application resource files 
            when the assembly name and the namespace of the control or application is different.
            </summary>
            <param name="assembly">The control assembly.</param>
            <param name="_namespace">The namespace of the control.</param>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.ReleaseResources">
            <summary>
            Tells the resource manager to call the System.Resources.ResourceSet.Close method
                on all System.Resources.ResourceSet objects and release all resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            Gets the localized text.
            </summary>
            <param name="culture">Current UI culture.</param>
            <param name="name">String that has to be localized.</param>
            <param name="args">Control object.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetString(System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetString(System.String,System.Object[])">
            <summary>
            Gets the localized text.
            </summary>
            <param name="name">String that has to be localized.</param>
            <param name="args">Control object.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetString(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized text.
            </summary>
            <param name="culture">Current UI culture.</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetObject(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetObject(System.String)">
            <summary>
            Gets the localized object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized string</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetBoolean(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized boolean object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized boolean object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetBoolean(System.String)">
            <summary>
            Gets the localized boolean object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized boolean object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetByte(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized byte object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized byte object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetByte(System.String)">
            <summary>
            Gets the localized byte object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized byte object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetChar(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized char object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized char object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetChar(System.String)">
            <summary>
            Gets the localized char object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized char object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetDouble(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized double object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized double object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetDouble(System.String)">
            <summary>
            Gets the localized double object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized double object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetFloat(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized float object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized float object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetFloat(System.String)">
            <summary>
            Gets the localized float object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized float object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetInt(System.String)">
            <summary>
            Gets the localized int object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized int object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetInt(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized int object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized int object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetLong(System.String)">
            <summary>
            Gets the localized double object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized double object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetLong(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized double object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized double object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetShort(System.Globalization.CultureInfo,System.String)">
            <summary>
            Gets the localized short object.
            </summary>
            <param name="culture">Current UI culture</param>
            <param name="name">String that has to be localized.</param>
            <returns>The localized short object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.GetShort(System.String)">
            <summary>
            Gets the localized short object.
            </summary>
            <param name="name">String that has to be localized.</param>
            <returns>The localized short object.</returns>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.SR.SetDefaultNamespace(System.String)">
            <summary>
            Provide DefaultNamespace to ResourceManager if DefaultNameSpace and AssemblyName are different. 
            </summary>
            <param name="nameSpace">DefaultNamespace</param>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Resources.Syncfusion_Tools_Wpf_Classic">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.Resources.Syncfusion_Tools_Wpf_Classic.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.Resources.Syncfusion_Tools_Wpf_Classic.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.ToolsClassicLocalizationResourceAccessor.GetControlAssembly">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetControlAssembly"/>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.ToolsClassicLocalizationResourceAccessor.GetControlAssemblyDefaultNamespace">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetControlAssemblyDefaultNamespace"/>
        </member>
        <member name="M:Syncfusion.Windows.Tools.Controls.Resources.ToolsClassicLocalizationResourceAccessor.GetDefaultResourceManager">
            <inheritdoc cref="M:Syncfusion.Windows.Shared.LocalizationResourceAccessor.GetDefaultResourceManager"/>
        </member>
        <member name="T:Syncfusion.Windows.Tools.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Tools.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
