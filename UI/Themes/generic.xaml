<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:skin="clr-namespace:Syncfusion.Themes.FluentDark.WPF;assembly=Syncfusion.Themes.FluentDark.WPF"
    xmlns:sys="clr-namespace:System;assembly=System.Runtime"
    xmlns:b="clr-namespace:Booger">

    <!--  **************************************  RESOURCES ***********************************************  -->

    <sys:Double x:Key="NormalFontSize">14</sys:Double>
    <sys:Double x:Key="SmallFontSize">12</sys:Double>
    <sys:Double x:Key="LargeFontSize">16</sys:Double>
    <sys:Double x:Key="ExtremLargeFontSize">18</sys:Double>

    <CircleEase
        x:Key="ease"
        EasingMode="EaseOut" />

    <!--  ****************************************  NOTE CONTROL  *********************************************  -->
    <Style TargetType="{x:Type b:NoteControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:NoteControl}">
                    <Border
                        Padding="5,3"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0 0 3 3"
                        RenderTransform="{TemplateBinding _contentRenderTransform}">
                        <TextBlock
                            Text="{TemplateBinding _text}"
                            TextWrapping="Wrap" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  *************************************************  CHAT BUBBLE  *************************************  -->

    <Style TargetType="{x:Type b:ChatBubble}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:ChatBubble}">
                    <StackPanel
                        Margin="0,5"
                        Background="{TemplateBinding Background}">
                        <TextBox
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Background="{TemplateBinding _headerBackground}"
                            BorderThickness="0"
                            FontSize="{DynamicResource SmallFontSize}"
                            Foreground="{TemplateBinding _headerForeground}"
                            IsReadOnly="True"
                            Text="{TemplateBinding _username}"
                            TextWrapping="Wrap" />
                        <Border x:Name="chatBubble"
                            Padding="5"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding _contentBackground}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding _cornerRadius}">
                            <StackPanel HorizontalAlignment="Stretch">
                                <b:ConditionalControl _condition="{TemplateBinding _isReadonly}">
                                    <b:ConditionalControl._elementWhileTrue>
                                        <b:MarkdownViewer _content="{Binding _content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </b:ConditionalControl._elementWhileTrue>
                                    <b:ConditionalControl._elementWhileFalse>
                                        <TextBox
                                            HorizontalAlignment="Stretch"
                                            AcceptsReturn="True"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Foreground="{TemplateBinding _contentForeground}"
                                            Text="{Binding _content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            TextWrapping="Wrap" />
                                    </b:ConditionalControl._elementWhileFalse>
                                </b:ConditionalControl>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  **************************************  CONDITIONAL CONTROL  *****************************************  -->

    <Style TargetType="{x:Type b:ConditionalControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type b:ConditionalControl}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <ContentPresenter x:Name="elementWhileTrue"
                                Content="{TemplateBinding _elementWhileTrue}">
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=_condition}"
                                                Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=_condition}"
                                                Value="False">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>

                            <ContentPresenter x:Name="elementWhileFalse"
                                Content="{TemplateBinding _elementWhileFalse}">
                                <ContentPresenter.Style>
                                    <Style TargetType="ContentPresenter">
                                        <Style.Triggers>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=_condition}"
                                                Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger
                                                Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=_condition}"
                                                Value="False">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Style>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************************  MARKDOWN VIEWER  *******************************************  -->
    <Style TargetType="{x:Type b:MarkdownViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="b:MarkdownViewer">
                    <ContentControl Content="{TemplateBinding _renderedContent}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ********************************************  LOADING CIRCLE  *******************************************  -->
    <Style TargetType="{x:Type b:LoadingCircle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="b:LoadingCircle">
                    <Viewbox Stretch="Uniform">
                        <UniformGrid
                            Width="75"
                            Height="50"
                            Columns="5">
                            <UniformGrid.Resources>
                                <Style
                                    x:Key="rec"
                                    TargetType="Rectangle">
                                    <Setter Property="Width" Value="10" />
                                    <Setter Property="Height" Value="30" />
                                    <Setter Property="Margin" Value="2.5,0" />
                                </Style>
                                <PowerEase
                                    x:Key="powerEase"
                                    EasingMode="EaseInOut"
                                    Power="3" />
                                <Storyboard
                                    x:Key="Animation"
                                    RepeatBehavior="Forever"
                                    Storyboard.TargetProperty="Height">
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        BeginTime="0:0:0.0"
                                        EasingFunction="{StaticResource powerEase}"
                                        Storyboard.TargetName="rec1"
                                        To="50"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        BeginTime="0:0:0.12"
                                        EasingFunction="{StaticResource powerEase}"
                                        Storyboard.TargetName="rec2"
                                        To="50"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        BeginTime="0:0:0.24"
                                        EasingFunction="{StaticResource powerEase}"
                                        Storyboard.TargetName="rec3"
                                        To="50"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        BeginTime="0:0:0.36"
                                        EasingFunction="{StaticResource powerEase}"
                                        Storyboard.TargetName="rec4"
                                        To="50"
                                        Duration="0:0:0.3" />
                                    <DoubleAnimation
                                        AutoReverse="True"
                                        BeginTime="0:0:0.48"
                                        EasingFunction="{StaticResource powerEase}"
                                        Storyboard.TargetName="rec5"
                                        To="50"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </UniformGrid.Resources>
                            <UniformGrid.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard
                                        Name="animation"
                                        Storyboard="{StaticResource Animation}" />
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Unloaded">
                                    <StopStoryboard BeginStoryboardName="animation" />
                                </EventTrigger>
                            </UniformGrid.Triggers>

                            <Rectangle
                                Name="rec1"
                                Fill="{TemplateBinding Foreground}"
                                Style="{StaticResource rec}" />
                            <Rectangle
                                Name="rec2"
                                Fill="{TemplateBinding Foreground}"
                                Style="{StaticResource rec}" />
                            <Rectangle
                                Name="rec3"
                                Fill="{TemplateBinding Foreground}"
                                Style="{StaticResource rec}" />
                            <Rectangle
                                Name="rec4"
                                Fill="{TemplateBinding Foreground}"
                                Style="{StaticResource rec}" />
                            <Rectangle
                                Name="rec5"
                                Fill="{TemplateBinding Foreground}"
                                Style="{StaticResource rec}" />
                        </UniformGrid>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UI/Themes/Styles/Common/Colors.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Common/Fonts.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Common/Sizes.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Common/AnimationStyles.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Menu/ContextMenu.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Calculator/SfCalculator.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ListBox/ListBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ListBox/MetroListBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ListView/ListView.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Text/TextBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Text/TextBlock.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Text/MetroTextBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/RichTextBox/MetroRichTextBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ComboBox/ComboBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ComboBox/ComboBoxAdv.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/ComboBox/MetroComboBox.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/DropDown/DropDown.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Button/Button.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Button/MetroButton.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Scrolling/ScrollBar.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Scrolling/ScrollViewer.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Progress/SfCircularProgressBar.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Progress/SfLinearProgressBar.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Progress/SfStepProgressBar.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/TabControl/BrowserTabItem.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/TabControl/TabControl.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/TabControl/TabControlExt.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Tile/Tile.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Tile/SfHubTile.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Tile/SfPulsingTile.xaml" />
        <ResourceDictionary Source="/UI/Themes/Styles/Tile/TileViewControl.xaml" />
    </ResourceDictionary.MergedDictionaries>



</ResourceDictionary>
