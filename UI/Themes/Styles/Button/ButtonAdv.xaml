<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="clr-namespace:Booger"
        xmlns:sfskin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
        xmlns:skin="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
        xmlns:sync="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Shared.WPF"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:theme="clr-namespace:Syncfusion.Themes.FluentDark.WPF"
        xmlns:wpf="clr-namespace:Syncfusion.Themes.FluentDark.WPF;assembly=Syncfusion.Themes.FluentDark.WPF">


        <!--  *********************************************** RESOURCES *****************************************************  -->


        <wpf:RevealItem
                x:Key="ButtonAdvRevealItem"
                CornerRadius="{DynamicResource FluentDark.CornerRadius2}"
                HoverBackground="{DynamicResource ControlHoverBrush}"
                HoverBorder="{DynamicResource RevealBorder}"
                PressedBackground="{DynamicResource SteelBlueBackground}" />

        <DataTemplate x:Key="LargeIconTemplate">
                <Image x:Name="LargeImage"
                        Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                        Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                        Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
        </DataTemplate>

        <DataTemplate x:Key="SmallIconTemplate">
                <Image x:Name="smallimage"
                        Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                        Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                        Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" />
        </DataTemplate>

        <ControlTemplate
                x:Key="SyncfusionButtonAdvControlTemplate"
                TargetType="sync:ButtonAdv">
                <Border
                        Name="ItemBorder1"
                        MinHeight="{DynamicResource FluentDark.MinHeight}"
                        wpf:FluentHelper.RevealItem="{DynamicResource ButtonAdvRevealItem}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2"
                        SnapsToDevicePixels="True">
                        <Border.Resources>
                                <sync:HorizontalContentToTextAlignmentConverter x:Key="TextAlignmentConverter" />
                        </Border.Resources>
                        <StackPanel
                                Margin="2,0,2,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter x:Name="LargeIconContent"
                                        Content="{Binding}"
                                        ContentTemplate="{TemplateBinding IconTemplate}"
                                        ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" />
                                <TextBlock x:Name="PART_LargeText"
                                        Margin="2,0,2,1"
                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Label}" />
                        </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                        <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                <Setter Property="MinHeight" Value="{DynamicResource FluentDark.MinHeight}" />
                        </Trigger>
                        <MultiTrigger>
                                <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{DynamicResource ControlHoverBrush}" />
                                <Setter TargetName="ItemBorder1" Property="Border.BorderBrush" Value="{DynamicResource BlueBorderBrush}" />
                                <Setter TargetName="PART_LargeText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{DynamicResource ControlHoverBrush}" />
                                <Setter TargetName="ItemBorder1" Property="Border.BorderBrush" Value="{DynamicResource ControlHoverBrush}" />
                                <Setter TargetName="PART_LargeText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{DynamicResource SteelBlueBackground}" />
                                <Setter TargetName="ItemBorder1" Property="Border.BorderBrush" Value="{DynamicResource SteelBlueBackground}" />
                                <Setter TargetName="PART_LargeText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsMultiLine" Value="True">
                                <Setter TargetName="PART_LargeText" Property="TextBlock.TextWrapping" Value="Wrap" />
                        </Trigger>
                        <Trigger Property="IsMultiLine" Value="False">
                                <Setter TargetName="PART_LargeText" Property="TextBlock.TextWrapping" Value="NoWrap" />
                        </Trigger>
                        <MultiTrigger>
                                <MultiTrigger.Conditions>
                                        <Condition Property="IsCheckable" Value="True" />
                                        <Condition Property="IsChecked" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                        <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{DynamicResource SteelBlueBackground}" />
                                        <Setter TargetName="ItemBorder1" Property="Border.BorderBrush" Value="{DynamicResource SteelBlueBackground}" />
                                        <Setter TargetName="PART_LargeText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                        <Setter Property="Foreground" Value="{DynamicResource WhiteForeground}" />
                                </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="LargeIconContent" Property="Opacity" Value="0.38" />
                                <Setter TargetName="ItemBorder1" Property="Border.Background" Value="{DynamicResource ControlBackground}" />
                                <Setter TargetName="ItemBorder1" Property="Border.BorderBrush" Value="{DynamicResource ControlBackground}" />
                                <Setter TargetName="PART_LargeText" Property="TextElement.Foreground" Value="{DynamicResource ControlBackground}" />
                                <Setter Property="Foreground" Value="{DynamicResource ControlBackground}" />
                        </Trigger>
                        <MultiTrigger>
                                <MultiTrigger.Conditions>
                                        <Condition Property="IconTemplate" Value="{x:Null}" />
                                        <Condition Property="IconTemplateSelector" Value="{x:Null}" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="LargeIconContent" Property="ContentTemplate" Value="{DynamicResource LargeIconTemplate}" />
                                <Setter TargetName="LargeIconContent" Property="Tag" Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                        </MultiTrigger>
                </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style
                x:Key="SyncfusionButtonAdvStyle"
                TargetType="{x:Type sync:ButtonAdv}">
                <Setter Property="Label" Value="Button" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource ControlInteriorBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource BlueBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource FormForeground}" />
                <Setter Property="FontFamily" Value="Roboto" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Template">
                        <Setter.Value>
                                <ControlTemplate TargetType="sync:ButtonAdv">
                                        <Border
                                                Name="ItemBorder"
                                                MinHeight="{DynamicResource FluentDark.MinHeight}"
                                                wpf:FluentHelper.RevealItem="{DynamicResource BttonAdvRevealItem}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="2"
                                                SnapsToDevicePixels="True">
                                                <Border.Resources>
                                                        <sync:HorizontalContentToTextAlignmentConverter x:Key="TextAlignmentConverter" />
                                                </Border.Resources>
                                                <Grid
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                                        <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="SmallIconContent"
                                                                Margin="2"
                                                                Content="{Binding}"
                                                                ContentTemplate="{TemplateBinding IconTemplate}"
                                                                ContentTemplateSelector="{TemplateBinding IconTemplateSelector}" />
                                                        <AccessText x:Name="PART_NormalText"
                                                                Grid.Column="1"
                                                                Margin="2,0,2,0"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                FontFamily="{TemplateBinding FontFamily}"
                                                                FontSize="{TemplateBinding FontSize}"
                                                                Foreground="{TemplateBinding Foreground}"
                                                                Text="{TemplateBinding Label}"
                                                                TextAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAlignment, Converter={StaticResource TextAlignmentConverter}}" />
                                                </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                                <Trigger Property="sfskin:SfSkinManager.SizeMode" Value="Touch">
                                                        <Setter Property="MinHeight" Value="{DynamicResource TouchMode.MinHeight}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                                <Condition Property="IconHeight" Value="0" />
                                                                <Condition Property="IconWidth" Value="0" />
                                                                <Condition Property="sfskin:SfSkinManager.SizeMode" Value="Touch" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="PART_NormalText" Property="Border.Margin" Value="0" />
                                                </MultiTrigger>
                                                <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                                <Condition Property="IsFocused" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="ItemBorder" Property="Border.Background" Value="{DynamicResource ControlInteriorBrush}" />
                                                        <Setter TargetName="ItemBorder" Property="Border.BorderBrush" Value="{DynamicResource ControlInteriorBrush}" />
                                                        <Setter TargetName="PART_NormalText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource WhiteForeground}" />
                                                </MultiTrigger>

                                                <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter TargetName="ItemBorder" Property="Border.Background" Value="{DynamicResource ControlHoverBrush}" />
                                                        <Setter TargetName="ItemBorder" Property="Border.BorderBrush" Value="{DynamicResource ControlHoverBrush}" />
                                                        <Setter TargetName="PART_NormalText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource WhiteForeground}" />
                                                </Trigger>
                                                <Trigger Property="IsMultiLine" Value="True">
                                                        <Setter TargetName="PART_NormalText" Property="TextBlock.TextWrapping" Value="Wrap" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                        <Setter TargetName="ItemBorder" Property="Border.Background" Value="{DynamicResource SteelBlueBackground}" />
                                                        <Setter TargetName="ItemBorder" Property="Border.BorderBrush" Value="{DynamicResource SteelBlueBackground}" />
                                                        <Setter TargetName="PART_NormalText" Property="TextElement.Foreground" Value="{DynamicResource WhiteForeground}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource WhiteForeground}" />
                                                </Trigger>
                                                <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                                <Condition Property="IconTemplate" Value="{x:Null}" />
                                                                <Condition Property="IconTemplateSelector" Value="{x:Null}" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="SmallIconContent" Property="ContentTemplate" Value="{DynamicResource SmallIconTemplate}" />
                                                        <Setter TargetName="SmallIconContent" Property="Tag" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}" />
                                                </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                </ControlTemplate>
                        </Setter.Value>
                </Setter>
                <Style.Triggers>
                        <Trigger Property="SizeMode" Value="Large">
                                <Setter Property="Template" Value="{DynamicResource SyncfusionButtonAdvControlTemplate}" />
                        </Trigger>
                        <Trigger Property="sfskin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                                <Setter Property="FocusVisualStyle" Value="{DynamicResource KeyboardFocusVisualStyle}" />
                        </Trigger>
                </Style.Triggers>
        </Style>

        <Style
                BasedOn="{StaticResource SyncfusionButtonAdvStyle}"
                TargetType="{x:Type sync:ButtonAdv}" />

</ResourceDictionary>
