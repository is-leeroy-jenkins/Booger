<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfSkinManager.WPF</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.SfSkinManager.CompositionData">
            <summary>
            Internal struct to hold window composition data parameters.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.AccentInfo">
            <summary>
            Internal struct to hold accent information to generate needed accent pointer data to be set for window composition data.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.AcrylicHelper">
            <summary>
            Internal class to handle blur background operations for window
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.AcrylicHelper.ApplyBlurBackground(System.IntPtr,System.Boolean)">
            <summary>
            Internal method to enable/disable blur background for window
            </summary>
            <param name="hwnd">An instance of <see cref="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)"/> based on specific window</param>
            <param name="canApplyBlurEffect">The <see cref="T:System.Boolean"/> value to decide whether we can enable/disable blur background for window</param>
            <remarks>
            Blur background will be displayed only in Windows 10 and above OS versions.
            </remarks>
        </member>
        <member name="T:Syncfusion.SfSkinManager.HoverEffect">
            <summary>
            Specifies the hover animation effect to be applied for fluent theme.
            </summary>
            <remarks>
            Applicable only for Fluent themes.
            </remarks>
        </member>
        <member name="F:Syncfusion.SfSkinManager.HoverEffect.Border">
            <summary>
            Hover animation effect will be applied only for Border.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.HoverEffect.Background">
            <summary>
            Hover animation effect will be applied only for Background.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.HoverEffect.BackgroundAndBorder">
            <summary>
            Hover animation effect will be applied for both Border and Background.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.HoverEffect.None">
            <summary>
            Hover animation effect will be disabled.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.PressedEffect">
            <summary>
            Specifies the pressed animation effect to be applied for fluent theme.
            </summary>
            <remarks>
            Applicable only for Fluent themes
            </remarks>
        </member>
        <member name="F:Syncfusion.SfSkinManager.PressedEffect.Reveal">
            <summary>
            Reveal animation effect will be applied when pressed using mouse/touch.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.PressedEffect.Glow">
            <summary>
            Glow animation effect will be applied when pressed using mouse/touch.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.PressedEffect.None">
            <summary>
            Pressed animation effect will be disabled.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.FocusVisualKind">
            <summary>
            Specifies the keyboard focus visual style to be applied for control.
            </summary>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes in Themestudio</see>.
            </remarks>
        </member>
        <member name="F:Syncfusion.SfSkinManager.FocusVisualKind.Default">
            <summary>
            Default keyboard focus visual style will be applied while pressing tab key.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility">
            <summary>
            High visibility border keyboard focus visual style will be applied while pressing tab key.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ScrollBarMode">
            <summary>
            Specifies the scrollbar display mode to be applied for control.
            </summary>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes in Themestudio</see>.
            </remarks>
        </member>
        <member name="F:Syncfusion.SfSkinManager.ScrollBarMode.Default">
            <summary>
            Default scrollbar will be displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.ScrollBarMode.Compact">
            <summary>
            Compact scrollbar will be applied for control where scrollbar in non-interactive mode will be of compact size and original scrollbar size will be displayed on hover/pressed only.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SizeMode">
            <summary>
            Specifies the size Mode in which controls should be displayed.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SizeMode.Default">
            <summary>
            Default size mode will be applied for controls.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SizeMode.Touch">
            <summary>
            Touch interactive size mode will be applied for control. In this mode, more space is added around the inner elements, to make them easier to tap.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ColorHelper">
            <summary>
            Represents a class which helps in generating derivative colors based on factor and opacity.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.GetVariantBrush(System.Windows.Media.Brush,System.Double,System.Double)">
            <summary>
            Helper method to get variant brush based on provided factor applied to provided brush
            </summary>
            <param name="brush">Default brush value</param>
            <param name="factor">Factor to be applied on color value of default brush</param>
            <returns>An instance of <see cref="T:System.Windows.Media.Brush"/> value</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.GetVariantColor(System.Windows.Media.Color,System.Double,System.Double)">
            <summary>
            Helper method to get variant color based on provided factor applied to provided color
            </summary>
            <param name="color">Default color value</param>
            <param name="factor">Factor to apply on default color value</param>
            <returns>An instance of <see cref="!:System.Media.Color"/> value</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.HSLToRGB(System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Helper method to convert HSL to RGB color value
            </summary>
            <param name="A">Alpha Value</param>
            <param name="H">Hue Value</param>
            <param name="S">Saturation Value</param>
            <param name="L">Lightness Value</param>
            <returns>An instance of <see cref="!:System.Media.Color"/> value</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ColorHelper.HueToRGB(System.Single,System.Single,System.Single)">
            <summary>
            Helper method to convert hue to RGB values
            </summary>
            <param name="derivative1">First derivative value</param>
            <param name="derivative2">Second derivative value</param>
            <param name="hue">Hue factor</param>
            <returns>An instance of <see cref="T:System.Single"/> value</returns>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ResourceDictionaryProvider">
            <summary>
            Markup extension class to store common resource dictionary needed for themes.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfSkinManager.ResourceDictionaryProvider.ThemeName">
            <summary>
            Property to store theme name.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.ResourceDictionaryProvider.DictionaryName">
            <summary>
            Property to store dictionary name.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.Dispose">
            <summary>
            Helper method to dispose <see cref="T:Syncfusion.SfSkinManager.ResourceDictionaryProvider"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.GetResourceDictionary(System.String,System.String)">
            <summary>
            Helper method to get common/brush keys resource dictionary
            </summary>
            <param name="themeName">Theme name</param>
            <param name="dictionaryName">Dictionary name (Common/Brushes)</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ResourceDictionaryProvider.UpdateCommonDictionary(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Helper method to update modified common/brush keys resource dictionary
            </summary>
            <param name="themeName">Theme name</param>
            <param name="dictionaryName">Dictionary name</param>
            <param name="keyValuePairs">List of updated key and values</param>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SkinManagerHelper">
            <summary>
            Helper class to handle theme related settings to be applied for control
            </summary>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes in Themestudio</see>.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.GetFocusVisualKind(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.FocusVisualKindProperty"/> property value that denotes the type of keyboard focus appearance of controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> enumeration that specifies the keyboard focus appearance of control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/></term>
            <description>The default keyboard focus visual style will be applied while pressing tab key.</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility"/></term>
            <description>The high visibility border for keyboard focus visual style will be applied while pressing tab key</description>
            </item>     
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> value has been applied</param>
            <returns><see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> value</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.SetFocusVisualKind(System.Windows.DependencyObject,Syncfusion.SfSkinManager.FocusVisualKind)">
            <summary>
            Sets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.FocusVisualKindProperty"/> property value that denotes the type of keyboard focus appearance of controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> enumeration that specifies the keyboard focus appearance of control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/></term>
            <description>The default keyboard focus visual style will be applied while pressing tab key.</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility"/></term>
            <description>The high visibility border for keyboard focus visual style will be applied while pressing tab key</description>
            </item>   
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> value has been applied</param>
            <param name="value"><see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> value</param>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SkinManagerHelper.FocusVisualKindProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.FocusVisualKindProperty"/> dependency attached property.
            </summary> 
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.FocusVisualKind"/> enumeration that specifies the keyboard focus appearance of control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/></term>
            <description>The default keyboard focus visual style will be applied while pressing tab key.</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility"/></term>
            <description>The high visibility border for keyboard focus visual style will be applied while pressing tab key</description>
            </item>   
            </list>
            </value>
            <value>
            The default value is <see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/>.
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/></term>
            <description>The default keyboard focus visual style will be applied</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility"/></term>
            <description>The high visibility border for keyboard focus visual style will be applied</description>
            </item>     
            </list>
            </value>
            <remarks>
            The identifier for the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.FocusVisualKindProperty"/> dependency attached property.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.GetScrollBarMode(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ScrollBarModeProperty"/> property value that denotes the type of scrollbar to be displayed in controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> enumeration that specifies the scrollbar style to be applied for control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/></term>
            <description>The default scrollbar will be displayed in control</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Compact"/></term>
            <description>The Compact scrollbar will be applied for control where scrollbar in non-interactive mode will be of compact size and original scrollbar size will be displayed on hover/pressed only.</description>
            </item>     
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> value has been applied</param>
            <returns><see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> value</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.SetScrollBarMode(System.Windows.DependencyObject,Syncfusion.SfSkinManager.ScrollBarMode)">
            <summary>
            Sets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ScrollBarModeProperty"/> property value that denotes the type of scrollbar to be displayed in controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> enumeration that specifies the scrollbar style to be applied for control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/></term>
            <description>The default scrollbar will be displayed in control</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Compact"/></term>
            <description>The Compact scrollbar will be applied for control where scrollbar in non-interactive mode will be of compact size and original scrollbar size will be displayed on hover/pressed only.</description>
            </item>     
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> value has been applied</param>
            <param name="value"><see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> value</param>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SkinManagerHelper.ScrollBarModeProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ScrollBarModeProperty"/> dependency attached property.
            </summary>
            <value>
            <para>One of the <see cref="T:Syncfusion.SfSkinManager.ScrollBarMode"/> enumeration that specifies the scrollbar style to be applied for control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/></term>
            <description>The default scrollbar will be displayed in control</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Compact"/></term>
            <description>The Compact scrollbar will be applied for control where scrollbar in non-interactive mode will be of compact size and original scrollbar size will be displayed on hover/pressed only.</description>
            </item>     
            </list>
            </value>
            <remarks>
            The identifier for the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ScrollBarModeProperty"/> dependency attached property.
            </remarks>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.GetShowAcrylicBackground(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> property value that will enable/disable acrylic background for window. 
            </summary>
            <value>
            The <see cref="T:System.Boolean"/> value to enable/disable acrylic background. The default value is <b>false</b>.
            </value>
            <remarks>
            <para>Applicable only for fluent theme and should be enabled only for window.</para>
            <para>Acrylic blur background will be displayed only in Windows 10 and above OS versions.</para>
            </remarks>
            <param name="obj">Control for which <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> value has been applied</param>
            <returns><see cref="T:System.Boolean"/> value</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.SetShowAcrylicBackground(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Sets the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> property value that will enable/disable acrylic background for window. 
            </summary>
            <value>
            The <see cref="T:System.Boolean"/> value to enable/disable acrylic background. The default value is <b>false</b>.
            </value>
            <remarks>
            <para>Applicable only for fluent theme and should be enabled only for window.</para>
            <para>Acrylic blur background will be displayed only in Windows 10 and above OS versions.</para>
            </remarks>
            <param name="obj">Control for which <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> value has been applied</param>
            <param name="value"><see cref="T:System.Boolean"/> value</param>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> dependency attached property.
            </summary>
            <value>
            The <see cref="T:System.Boolean"/> value to enable/disable acrylic background. The default value is <b>false</b>.
            </value>
            <remarks>
            The identifier for the <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> dependency attached property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.OnShowAcrylicBackgroundChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Property change callback to enable/disable blur background for window
            </summary>
            <param name="obj">Window for which <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> value has been applied</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> value that holds the information of <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> property value changes</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.ValidateBlurBackground(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Helper method to handle property changed callback of <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> value changed.
            </summary>
            <param name="obj">Window for which <see cref="F:Syncfusion.SfSkinManager.SkinManagerHelper.ShowAcrylicBackgroundProperty"/> value has been applied</param>
            <param name="canShowAcrylic">The <see cref="T:System.Boolean"/> value to decide on whether to enable/disable blur background for window</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.UpdateBlurBackground(System.Windows.Window,System.Boolean)">
            <summary>
            Helper method to call <see cref="M:Syncfusion.SfSkinManager.AcrylicHelper.ApplyBlurBackground(System.IntPtr,System.Boolean)"/> method for handling blur background of window.
            </summary>
            <param name="window">An instance of <see cref="T:System.Windows.Window"/></param>
            <param name="canShowAcrylic">The <see cref="T:System.Boolean"/> value to decide on whether to enable/disable blur background for window</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerHelper.SetBlurBackground(System.Windows.Window,System.Boolean)">
            <summary>
            Helper method to decide on when to update blur background for window.
            </summary>
            <param name="window">An instance of <see cref="T:System.Windows.Window"/></param>
            <param name="canShowAcrylic">The <see cref="T:System.Boolean"/> value to decide on whether to enable/disable blur background for window</param>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SkinHelper">
            <summary>
            Represents a class which returns theme resources from theme assembly for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>. Each theme assembly will have class derived from <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/>.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetDictonaries(System.String,System.String)">
            <summary>
            Virtual method to get respective theme style dictionary for specific control type
            </summary>
            <param name="type">Control Name</param>
            <param name="style">Theme applied</param>
            <returns>List of <see cref="T:System.Windows.ResourceDictionary"/> xaml path </returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.SetFluentSettings(System.Windows.DependencyObject,Syncfusion.SfSkinManager.HoverEffect,Syncfusion.SfSkinManager.PressedEffect)">
            <summary>
            Virtual method to set respective fluent theme settings for specific control type
            </summary>
            <param name="obj">The control for which fluent theme settings needs to be applied</param>
            <param name="hoverEffectMode">The <see cref="T:Syncfusion.SfSkinManager.HoverEffect"/> value to be applied for hover animation</param>
            <param name="pressedEffectMode">The <see cref="T:Syncfusion.SfSkinManager.PressedEffect"/> value to be applied for pressed animation</param>
            <remarks>
            Applicable only for fluent themes.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetDictionaries(System.String,System.String)">
            <summary>
            Virtual method to get respective theme style dictionary for specific control type.
            </summary>
            <param name="type">Control Name</param>
            <param name="style">Theme applied</param>
            <returns>List of <see cref="T:System.Windows.ResourceDictionary"/> xaml path</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.GetStylesOfElement(System.Windows.DependencyObject)">
            <summary>
            Helper method to get theme name of particular control
            </summary>
            <param name="obj">element</param>
            <returns>theme name</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.SetStylesOnDialogWindow(System.Windows.Window,System.String)">
            <summary>
            Helper method to set styles for dialog window
            </summary>
            <param name="obj">Window instance</param>
            <param name="style">theme name</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinHelper.CopyStyle(System.Windows.DependencyObject,System.Windows.DependencyObject)">
            <summary>
            Helper method to copy style of one element to another.
            </summary>
            <param name="sourceElement">Source element whose style to be copied</param>
            <param name="targetElement">Target element where style to be applied.</param>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ThemeSettingsHelper">
            <summary>
            Represents a class which has various helper methods to update <see cref="!:Syncfusion.SfSkinManager.Theme.Settings"/> values in root theme resource dictionary.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.UpdateThemeSettings(System.String,System.Object)">
            <summary>
            Helper method to update theme settings for theme applied specific root element.
            </summary>
            <param name="themeName">Theme name</param>
            <param name="themeSettings">An instance of <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> value</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.UpdatePaletteProperties(System.String,System.Object)">
            <summary>
            Helper method to update palette color to primary background and primary foreground keys
            </summary>
            <param name="themeName">Theme name</param>
            <param name="themeSettings">An instance of <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> value</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetBrushSetting(System.Windows.ResourceDictionary,System.String,System.Object)">
            <summary>
            Helper method to set update brush values in respective resource dictionary
            </summary>
            <param name="mergeddictionary">Resource dictionary</param>
            <param name="key">Resource key</param>
            <param name="value">Value to be updated</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetCommonSetting(System.Windows.ResourceDictionary,System.String,System.Object)">
            <summary>
            Helper method to set updated common key values in respective resource dictionary
            </summary>
            <param name="mergeddictionary">Resource dictionary</param>
            <param name="key">Resource key</param>
            <param name="value">Value to be updated</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.SetThemeSetting(System.Windows.ResourceDictionary,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Helper method to loop the provided resource dictionary containing Brushes.xaml/Common.xaml and replace the theme keys which matches with keys available in keyValuePairs list.  
            </summary>
            <param name="resourceDictionary">Resource Dictionary</param>
            <param name="themeName">Theme name</param>
            <param name="dictionaryName">Respective dictionary name in xaml path</param>
            <param name="keyValuePairs">Key Value pair list containing the theme settings property values</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeSettingsHelper.GetDerivationColor(System.Windows.Media.Brush,System.Double,System.Double)">
            <summary>
            Helper method to get derivation color
            </summary>
            <param name="brushValue">Base brush value</param>
            <param name="derivationValue">derivation</param>
            <param name="opacity">opacity</param>
            <returns>An instance of <see cref="T:System.Windows.Media.Brush"/> value</returns>
        </member>
        <member name="T:Syncfusion.SfSkinManager.FluentTheme">
            <summary>
            Represents a class which holds fluent theme info for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.FluentTheme.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.SfSkinManager.FluentTheme"/> which allows you to set the fluent theme. 
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.FluentTheme.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.SfSkinManager.FluentTheme"/> which allows you to mention the required controls for which themes have to be applied and provides improved performance. 
            </summary>
            <param name="themeName">The theme name for which theme will be applied for an application.</param>
            <param name="controls">The list of controls for which themes have to be applied instead of applying for all controls in application.</param>
            <example>
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
               <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="controlList">
                    <sys:String>ButtonAdv</sys:String>
               </x:Array>
            </Window.Resources>
            
            <StackPanel syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=FluentDark, Controls={StaticResource controlList}}">
                <syncfusion:ButtonAdv Width="100" Grid.Row="0" Content="Testing1" Height="30"   Margin="10"></syncfusion:ButtonAdv>
                <syncfusion:TreeViewAdv Width="100" Grid.Row="2" Margin="10">
                    <syncfusion:TreeViewItemAdv Header="Testing3"/>
                    <syncfusion:TreeViewItemAdv Header="Testing4"/>
                    <syncfusion:TreeViewItemAdv Header="Testing5"/>
                </syncfusion:TreeViewAdv>
            </StackPanel>
            
            ]]>
            </code>
            <code language="C#">
            <![CDATA[
            string[] controls = new string[1] { nameof(ButtonAdv) };
            SfSkinManager.SetTheme(this, new FluentTheme("FluentDark") { Controls = controls });
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfSkinManager.FluentTheme.hoverEffect">
            <summary>
            Variable to hold <see cref="P:Syncfusion.SfSkinManager.FluentTheme.HoverEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this hover effect settings in fluent theme for control and its child element in application.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.FluentTheme.HoverEffectMode">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.FluentTheme.HoverEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this hover effect settings in fluent theme for control and its child element in application.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.HoverEffect"/> enumeration that specifies the hover animation to be applied. The default value is <see cref="F:Syncfusion.SfSkinManager.HoverEffect.BackgroundAndBorder"/>.
            </value>
        </member>
        <member name="F:Syncfusion.SfSkinManager.FluentTheme.pressedEffect">
            <summary>
            Variable to hold <see cref="P:Syncfusion.SfSkinManager.FluentTheme.PressedEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this pressed effect settings in fluent theme for control and its child element in application.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.FluentTheme.PressedEffectMode">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.FluentTheme.PressedEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this pressed effect settings in fluent theme for control and its child element in application.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.PressedEffect"/> enumeration that specifies the pressed animation to be applied. The default value is <see cref="F:Syncfusion.SfSkinManager.PressedEffect.Reveal"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfSkinManager.FluentTheme.ShowAcrylicBackground">
            <summary>
            Gets or sets the <see cref="!:ShowAcrylicBackgroundProperty"/> property value that will enable/disable acrylic background for window. 
            </summary>
            <value>
            The <see cref="T:System.Boolean"/> value to enable/disable acrylic background. The default value is <b>false</b>.
            </value>
            <remarks>
            <para>Applicable only for fluent theme and should be enabled only for window.</para>
            <para>Acrylic blur background will be displayed only in Windows 10 and above OS versions.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.FluentTheme.Init(System.Windows.DependencyObject)">
            <summary>
            Initialize method to process the provided fluent theme settings.
            </summary>
            <param name="obj">Control</param>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.NamespaceDoc">
             <summary>
            Provides classes, interfaces and enumerators to manage themes for Syncfusion controls. 
             </summary>
             <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.VisualStyles">
            <summary>
            Specifies the visual style names for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>
            </summary>
            <remarks>
            Based on the <see cref="T:Syncfusion.SfSkinManager.VisualStyles"/>, <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will look for theme assembly. You can load custom theme assembly using <see cref="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterTheme(System.String,Syncfusion.SfSkinManager.SkinHelper)"/> method.
            </remarks>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Default">
            <summary>
            <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> clears the applied themes and controls will appear in its default appearence.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Blend">
            <summary>
            Represents the Blend theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Blend.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Metro">
            <summary>
            Represents the Metro theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Blend.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Black">
            <summary>
            Represents the Office2010Black theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Black.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Blue">
            <summary>
            Represents the Office2010Blue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Blue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2010Silver">
            <summary>
            Represents the Office2010Silver theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2010Silver.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013DarkGray">
            <summary>
            Represents the Office2013DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013LightGray">
            <summary>
            Represents the Office2013LightGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013LightGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2013White">
            <summary>
            Represents the Office2013White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2013White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.VisualStudio2013">
            <summary>
            Represents the VisualStudio2013 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.VisualStudio2013.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Lime">
            <summary>
            Represents the Lime theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Lime.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Saffron">
            <summary>
            Represents the Saffron theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Saffron.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office365">
            <summary>
            Represents the Office365 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office365.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016White">
            <summary>
            Represents the Office2016White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016DarkGray">
            <summary>
            Represents the Office2016DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2016Colorful">
            <summary>
            Represents the Office2016Colorful theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2016Colorful.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.VisualStudio2015">
            <summary>
            Represents the VisualStudio2015 theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.VisualStudio2015.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.SystemTheme">
            <summary>
            Represents the SystemTheme theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.SystemTheme.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialLight">
            <summary>
            Represents the MaterialLight theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialLight.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialDark">
            <summary>
            Represents the MaterialDark theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialDark.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialLightBlue">
            <summary>
            Represents the MaterialLightBlue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialLightBlue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.MaterialDarkBlue">
            <summary>
            Represents the MaterialDarkBlue theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.MaterialDarkBlue.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019Colorful">
            <summary>
            Represents the Office2019Colorful theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019Colorful.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019Black">
            <summary>
            Represents the Office2019Black theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019Black.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019White">
            <summary>
            Represents the Office2019White theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019White.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019DarkGray">
            <summary>
            Represents the Office2019DarkGray theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019DarkGray.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019HighContrast">
            <summary>
            Represents the HighContrast theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019HighContrast.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Office2019HighContrastWhite">
            <summary>
            Represents the HighContrast white theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Office2019HighContrastWhite.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.FluentLight">
            <summary>
            Represents the Fluent light theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.FluentLight.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.FluentDark">
            <summary>
            Represents the Fluent dark theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.FluentDark.WPF assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Windows11Light">
            <summary>
            Represents the Windows11 light theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Windows11Light.WPF assembly.
            </summary>     
        </member>
        <member name="F:Syncfusion.SfSkinManager.VisualStyles.Windows11Dark">
            <summary>
            Represents the Windows11 dark theme. <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> loads theme from Syncfusion.Themes.Windows11Dark.WPF assembly.
            </summary>     
        </member>
        <member name="T:Syncfusion.SfSkinManager.SfSkinManager">
            <summary>
            Represents the class that manages themes for Syncfusion controls.
            </summary>
            <remarks>
            The Skin manager applies theme to all the controls in application in optimistic way. It iterates through controls in visual tree and add the corresponding theme resource dictionary to apply theme. 
            <para>For example, if you are applying MaterialLight theme, skin manager will load resources from "Syncfusion.Themes.MaterialLight.WPF.dll". Ensure you have added theme assembly as reference.</para>
            <para>It is recommended to apply theme before InitializeComponent for better performance.</para>
            <para>The touch UI for particular control can be enabled using <see cref="!:Syncfusion.SfSkinManager.SfSkinManager.SizeMode"/>.</para>
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterTheme(System.String,Syncfusion.SfSkinManager.SkinHelper)">
            <summary>
            Method to register theme name and its <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/>. 
            </summary>
            <param name="themeName">Theme name (visual style) </param>
            <param name="skinHelper">Instance of <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> in theme assembly. </param>
            <returns>
            true, if the theme registered successfully. 
            false, if theme name already registered.
            </returns>
            <remarks>
            The <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> returns theme resource dictionary details to skin manager to apply theme.
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported themes and its settings</see>
            </remarks>
            <example>
            This example shows how to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            string style = "MaterialDark";
            SkinHelper styleInstance = null;
            var skinHelpterStr = "Syncfusion.Themes." + style + ".WPF." + style + "SkinHelper, Syncfusion.Themes." + style + ".WPF";
            Type skinHelpterType = Type.GetType(skinHelpterStr);
            if (skinHelpterType != null)
               styleInstance = Activator.CreateInstance(skinHelpterType) as SkinHelper;
            if (styleInstance != null)
            {
                SfSkinManager.RegisterTheme("CustomMaterialDark1", styleInstance);
            }
            MenuAdv menuAdv =  new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme() { ThemeName = "CustomMaterialDark1;MaterialDark" });
            ]]>
            </code>
            </example>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.RegisterThemeSettings(System.String,Syncfusion.SfSkinManager.IThemeSetting)">
            <summary>
            Helper method to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            </summary>
            <param name="themeName">Theme name (visual style)</param>
            <param name="themeSetting">Instance of <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> in theme assembly</param>
            <returns>
            <b>true</b>, if the theme registered successfully. 
            <b>false</b>, if theme name already registered.
            </returns>
            <remarks>
            The <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> returns theme resource dictionary details to skin manager to apply theme.
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported themes and its settings</see>
            </remarks>
            <example>
            This example shows how to register theme name, <see cref="T:Syncfusion.SfSkinManager.SkinHelper"/> and its custom <see cref="T:Syncfusion.SfSkinManager.IThemeSetting"/> information.
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MaterialDarkThemeSettings materialDarkThemeSettings = new MaterialDarkThemeSettings();
            materialDarkThemeSettings.PrimaryBackground = new SolidColorBrush(Colors.Red);
            materialDarkThemeSettings.PrimaryForeground = new SolidColorBrush(Colors.Yellow);
            materialDarkThemeSettings.FontFamily = new FontFamily("Arial");
            materialDarkThemeSettings.BodyFontSize = 12;
            materialDarkThemeSettings.SubTitleFontSize = 14;
            string style = "MaterialDark";
            SfSkinManager.RegisterThemeSettings("MaterialDark", materialDarkThemeSettings);
            MenuAdv menuAdv =  new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme() { ThemeName = "MaterialDark" });
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication">
            <summary>
            Gets or sets whether to maintain theme resources in <see cref="P:System.Windows.Application.Resources"/> or resources of root element to which <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> attached property set. 
            </summary>
            <value>
            true, if you want to maintain theme resource in <see cref="P:System.Windows.Application.Resources"/>.
            false, the theme resources will be maintained in the <see cref="P:System.Windows.FrameworkElement.Resources"/> of root elelemt to which <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> attached property set.
            </value>
            <remarks>
            It is not recommended to change <see cref="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication"/> at runtime. Also, ensure to set <see cref="P:Syncfusion.SfSkinManager.SfSkinManager.ApplyStylesOnApplication"/> before setting <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetSizeMode(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="!:Syncfusion.SfSkinManager.SfSkinManager.SizeMode"/> value that indicates whether the control inner element sizes should be updated with touch compatible size or default sizes.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> enumeration that specifies the size mode to be applied for control. The default value is <see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/>.
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/></term>
            <description>The default size will be updated for control inner elements</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Touch"/></term>
            <description>The touch interactive size mode will be applied for control. In this mode, more space is added around the inner elements, to make them easier to tap.</description>
            </item>     
            </list>
            </value>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> value is updated</param>
            <remarks>
            The touch compatible sizing will be configured using proper minimum height, minimum width, padding and margin etc. set for control to assist in touch interactions.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetSizeMode(System.Windows.DependencyObject,Syncfusion.SfSkinManager.SizeMode)">
            <summary>
            Sets the <see cref="!:Syncfusion.SfSkinManager.SfSkinManager.SizeMode"/> value that indicates whether the control inner element sizes should be updated with touch compatible size or default sizes.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> enumeration that specifies the size mode to be applied for control. The default value is <see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/>.
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/></term>
            <description>The default size will be updated for control inner elements</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Touch"/></term>
            <description>The touch interactive size mode will be applied for control. In this mode, more space is added around the inner elements, to make them easier to tap.</description>
            </item>     
            </list>
            </value>
            <param name="obj">Control for which <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> value is updated</param>
            <param name="value">The <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> value</param>
            <remarks>
            The touch compatible sizing will be configured using proper minimum height, minimum width, padding and margin etc. set for control to assist in touch interactions.
            </remarks>
            <example>
            <code language="XAML">
            <![CDATA[
            <syncfusion:MenuAdv x:Name="menuAdv" syncfusion:SfSkinManager.SizeMode="Touch"/>
            ]]>
            </code>
            </example>
            <seealso cref="F:Syncfusion.SfSkinManager.SfSkinManager.SizeModeProperty"/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SfSkinManager.SizeModeProperty">
            <summary>
            Identifies the <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.SizeModeProperty" /> dependency attached property.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> enumeration that specifies the size mode to be applied for control. The default value is <see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/>.
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Default"/></term>
            <description>The default size will be updated for control inner elements</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.SizeMode.Touch"/></term>
            <description>The touch interactive size mode will be applied for control. In this mode, more space is added around the inner elements, to make them easier to tap.</description>
            </item>     
            </list>
            </value>
            <remarks>
            The identifier for the <see cref="F:Syncfusion.SfSkinManager.SfSkinManager.SizeModeProperty" /> dependency attached property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetVisualStyle(System.Windows.DependencyObject)">
            <summary>
            Gets the visual style applied to particular element.
            </summary>
            <param name="obj">UI element</param>
            <returns>VisualStyles</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetVisualStyle(System.Windows.DependencyObject,Syncfusion.SfSkinManager.VisualStyles)">
            <summary>
            Sets the visual style to the element and its children.
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SfSkinManager.VisualStyleProperty">
            <summary>
             Gets or sets a visual style of element where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> apply themes. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetTheme(System.Windows.DependencyObject)">
            <summary>
            Gets the <see cref="T:Syncfusion.SfSkinManager.Theme"/> value of particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfSkinManager.Theme"/> theme info. The default value is instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/> with <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> property value as <b>Default</b>.
            </value>
            <param name="obj">The element to which the <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be set. </param>
            <param name="value"> The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</param>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>
            <param name="obj">The element whose <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be retrieved. </param>
            <returns>The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetTheme(System.Windows.DependencyObject,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Sets the <see cref="T:Syncfusion.SfSkinManager.Theme"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfSkinManager.Theme"/> theme info. The default value is instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/> with <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> property value as <b>Default</b>.
            </value>
            <param name="obj">The element to which the <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be set. </param>
            <param name="value"> The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</param>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>
            <example>
            This example shows how to set default supported themes using <see cref="T:Syncfusion.SfSkinManager.Theme"/>.
            <code language="XAML">
            <![CDATA[
            
            <syncfusion:MenuAdv x:Name="menuAdv" syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=MaterialDark}"/>
            
            ]]>
            </code>
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MenuAdv menuAdv = new MenuAdv();
            SfSkinManager.SetTheme(menuAdv, new Theme("MaterialDark"));
            ]]>
            </code>
            </example>
            <example>
            This example shows how to set custom theme name using <see cref="T:Syncfusion.SfSkinManager.Theme"/>.
            <code language="XAML">
            <![CDATA[
            
            <syncfusion:MenuAdv x:Name="menuAdv" syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=CustomTheme1;MaterialDark}"/>
            
            ]]>
            </code>
            <code lang="C#">
            <![CDATA[
            using Syncfusion.Windows.Shared;
            using Syncfusion.SfSkinManager
            
            MenuAdv menu =  new MenuAdv();
            SfSkinManager.SetTheme(menu, new Theme("CustomTheme1;MaterialDark"));
            ]]>
            </code>
            </example>
        </member>
        <member name="F:Syncfusion.SfSkinManager.SfSkinManager.ThemeProperty">
            <summary>
            Identifies the <see cref="T:Syncfusion.SfSkinManager.Theme" /> dependency attached property to get or set a theme name where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:Syncfusion.SfSkinManager.Theme"/> theme info. The default value is instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/> with <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> property value as <b>Default</b>.
            </value>
            <param name="obj">The element to which the <see cref="T:Syncfusion.SfSkinManager.Theme"/> must be set. </param>
            <param name="value"> The <see cref="T:Syncfusion.SfSkinManager.Theme"/> SkinManager theme info.</param>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>
            <remarks>
            The identifier for the <see cref="T:Syncfusion.SfSkinManager.Theme" /> dependency attached property.
            </remarks>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.OnVisualStyleChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Applies the visual style to the control and its child element.
            </summary>
            <param name="obj">Dependency object</param>
            <param name="e">DependencyPropertyChangedEventArgs contains the theme that has to be applied.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.OnThemeChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Applies the theme name to the control and its child element.
            </summary>
            <param name="obj">Control for which theme has been applied</param>
            <param name="e">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> value that contains the theme applied.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetThemeName(System.Windows.DependencyObject)">
            <summary>
            Helper method to return the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/>.
            </summary>
            <param name="obj">UI Element</param>
            <returns>SfSkinManager theme name of type <see cref="T:System.String"/>.</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetBaseThemeName(System.Windows.DependencyObject)">
            <summary>
            Helper method to return the <see cref="P:Syncfusion.SfSkinManager.Theme.BaseStyleName"/>.
            </summary>
            <param name="obj">UI Element</param>
            <returns>SfSkinManager base theme name of type <see cref="T:System.String"/>.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfSkinManager.SfSkinManager.GetThemeDesign(System.Windows.DependencyObject)" -->
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.SfSkinManager.SfSkinManager.GetShowAcrylicBackground(System.Windows.DependencyObject)" -->
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetSizeModeValue(System.Windows.DependencyObject)">
            <summary>
            Gets <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> from Source UI Element
            </summary>
            <param name="obj">UI Element</param>
            <returns>SizeMode value which was applied to UI Element.</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.SetSizeModeValue(System.Windows.DependencyObject,System.String)">
            <summary>
            Sets <see cref="T:Syncfusion.SfSkinManager.SizeMode"/> for UI Element.
            </summary>
            <param name="obj">UI Element</param>
            <param name="sizeMode">SizeMode value</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ChangeVisualStyle(System.String,System.String,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Helper method to handle theme changed for particular control
            </summary>
            <param name="felement">Control for which theme is applied.</param>
            <param name="visualstyle">Theme name.</param>
            <param name="themeinfo">Theme properties instance</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ChangeVisualStyle(System.Windows.FrameworkElement,System.String,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Helper method to handle theme changed for particular control
            </summary>
            <param name="felement">Control for which theme is applied.</param>
            <param name="visualstyle">Theme name.</param>
            <param name="themeinfo">Theme properties instance</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.GetSkinInstance(System.String)">
            <summary>
            Method to create and return SkinHelper instance for specific visual style
            </summary>
            <param name="style">Contains VisualStyle</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ApplyWindowStyle(System.Windows.Window,System.String,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Apply the theme to the Window, ChromelessWindow and RibbonWindow.
            </summary>
            <param name="window">Window type.</param>
            <param name="style">Style that applies to the window.</param>
            <param name="rootResourceDictionary">Resource dictionary that applies the style.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.ApplyThemeForMSControl(System.Windows.FrameworkElement,System.String,System.Windows.ResourceDictionary)">
            <summary>
            Apply the theme for MSControl
            </summary>
            <param name="obj">Element for which theme should be applied</param>
            <param name="style">Theme name</param>
            <param name="rootResourceDictionary">Root resource dictionary for specific theme</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.AddRootResourceDictionaty(System.Windows.ResourceDictionary,System.Windows.ResourceDictionary)">
            <summary>
            Adds the resource dictionary to the root element by comparing with the previous merged dictionaries.
            </summary>
            <param name="rootResourceDictionary">Resource dictionary of the root element.</param>
            <param name="newResourceDictionary">New resource dictionary that has to be added to the root element.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.FindAncestor(System.Windows.Media.Visual,System.Type)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SfSkinManager.Dispose(System.Object)">
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.IThemeSetting">
            <summary>
            Represents an interface which holds theme customization properties for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.SkinManagerExtension">
            <summary>
            A markup extension that returns <see cref="T:Syncfusion.SfSkinManager.Theme"/> for themename.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SkinManagerExtension.ThemeName">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element.
            </summary>
            <value>
            The <see cref="T:System.String"/> Theme name. The default value is <b>null</b>.
            </value>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>      
        </member>
        <member name="P:Syncfusion.SfSkinManager.SkinManagerExtension.FluentHoverEffectMode">
            <summary>
            Gets or sets the <see cref="!:SkinManagerExtension.HoverEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this hover effect settings in fluent theme for control and its child element.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.HoverEffect"/> enumeration that specifies the hover animation to be applied. The default value is <see cref="F:Syncfusion.SfSkinManager.HoverEffect.BackgroundAndBorder"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SkinManagerExtension.FluentPressedEffectMode">
            <summary>
            Gets or sets the <see cref="!:SkinManagerExtension.PressedEffectMode"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply this pressed effect settings in fluent theme for control and its child element.
            </summary>
            <value>
            One of the <see cref="T:Syncfusion.SfSkinManager.PressedEffect"/> enumeration that specifies the pressed animation to be applied. The default value is <see cref="F:Syncfusion.SfSkinManager.PressedEffect.Reveal"/>.
            </value>
        </member>
        <member name="P:Syncfusion.SfSkinManager.SkinManagerExtension.Controls">
            <summary>
            Gets or sets the list of controls for which themes have to be applied instead of applying for all controls in application to provide improved performance.
            </summary>
            <example>
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
               <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="controlList">
                    <sys:String>ButtonAdv</sys:String>
               </x:Array>
            </Window.Resources>
            
            <StackPanel syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=MaterialDark, Controls={StaticResource controlList}}">
                <syncfusion:ButtonAdv Width="100" Grid.Row="0" Content="Testing1" Height="30"   Margin="10"></syncfusion:ButtonAdv>
                <syncfusion:TreeViewAdv Width="100" Grid.Row="2" Margin="10">
                    <syncfusion:TreeViewItemAdv Header="Testing3"/>
                    <syncfusion:TreeViewItemAdv Header="Testing4"/>
                    <syncfusion:TreeViewItemAdv Header="Testing5"/>
                </syncfusion:TreeViewAdv>
            </StackPanel>
            
            ]]>
            </code>
            </example>
        </member>
        <member name="M:Syncfusion.SfSkinManager.SkinManagerExtension.ProvideValue(System.IServiceProvider)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.Theme">
            <summary>
            Represents a class which holds theme info for <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/>
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.#ctor(System.String)">
            <summary>
            Initializes new instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/>
            </summary>
            <param name="themeName">The theme name for which theme will be applied for an application.</param>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of <see cref="T:Syncfusion.SfSkinManager.Theme"/> which allows you to mention the required controls for which themes have to be applied and provides improved performance. 
            </summary>
            <param name="themeName">The theme name for which theme will be applied for an application.</param>
            <param name="controls">The list of controls for which themes have to be applied instead of applying for all controls in application. </param>
            <example>
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
               <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="controlList">
                    <sys:String>ButtonAdv</sys:String>
               </x:Array>
            </Window.Resources>
            
            <StackPanel syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=MaterialDark, Controls={StaticResource controlList}}">
                <syncfusion:ButtonAdv Width="100" Grid.Row="0" Content="Testing1" Height="30"   Margin="10"></syncfusion:ButtonAdv>
                <syncfusion:TreeViewAdv Width="100" Grid.Row="2" Margin="10">
                    <syncfusion:TreeViewItemAdv Header="Testing3"/>
                    <syncfusion:TreeViewItemAdv Header="Testing4"/>
                    <syncfusion:TreeViewItemAdv Header="Testing5"/>
                </syncfusion:TreeViewAdv>
            </StackPanel>
            
            ]]>
            </code>
            <code language="C#">
            <![CDATA[
            string[] controls = new string[1] { nameof(ButtonAdv) };
            SfSkinManager.SetTheme(this, new Theme("MaterialDark") { Controls = controls });
            ]]>
            </code>
            </example>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.SfSkinManager.Theme.ThemeDesign" -->
        <member name="P:Syncfusion.SfSkinManager.Theme.VisualStyleName">
            <summary>
            Gets or sets the theme name for which this resource dictionary created.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.BaseStyleName">
            <summary>
            Gets or sets the base theme name for which this resource dictionary created.
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Init(System.Windows.DependencyObject)">
            <summary>
            Initialize method to process the provided theme name.
            </summary>
            <param name="obj">Control</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Dispose">
            <summary>
            Dispose and clears the resource dictionaries maintained. 
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.Theme.Dispose(System.Boolean)">
            <summary>
            Dispose and clears the resource dictionaries maintained. 
            </summary>
            <param name="disposing">Indicates whether the call is from Dispose method or from a finalizer</param>
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.ThemeName">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeName"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> will utilize to apply respective themes for control and its child element in application.
            </summary>
            <value>
            The <see cref="T:System.String"/> Theme name. The default value is <b>null</b>.
            </value>
            <remarks>
            <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">Supported Themes</see>
            <para>We can provide theme name in this format: <b>MaterialDark</b> and we can also provide custom theme name in this format: <b>CustomTheme1;BaseThemeName</b> where <b>CustomTheme1</b> denotes the custom theme name and <b>BaseThemeName</b> denotes the theme name from which it is derived. For example <b>CustomTheme1;MaterialDark</b>.</para>
            </remarks>      
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.FocusVisualKind">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.FocusVisualKind"/> property value that denotes the type of keyboard focus appearance of controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="P:Syncfusion.SfSkinManager.Theme.FocusVisualKind"/> enumeration that specifies the keyboard focus appearance of control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.Default"/></term>
            <description>The default keyboard focus visual style will be applied while pressing tab key.</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.FocusVisualKind.HighVisibility"/></term>
            <description>The high visibility border for keyboard focus visual style will be applied while pressing tab key</description>
            </item>   
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.ScrollBarMode">
            <summary>
            Gets or Sets the <see cref="!:ScrollBarModeProperty"/> property value that denotes the type of scrollbar to be displayed in controls where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> applies to the control and its child element. 
            </summary>
            <value>
            <para>One of the <see cref="P:Syncfusion.SfSkinManager.Theme.ScrollBarMode"/> enumeration that specifies the scrollbar style to be applied for control.</para>
            <para>The default value is <see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/>.</para>
            <para><b>Fields:</b></para>
            <list type="table">
            <listheader>
            <term>Enumeration</term>
            <description>Description.</description>
            </listheader>
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Default"/></term>
            <description>The default scrollbar will be displayed in control</description>
            </item>  
            <item>
            <term><see cref="F:Syncfusion.SfSkinManager.ScrollBarMode.Compact"/></term>
            <description>The Compact scrollbar will be applied for control where scrollbar in non-interactive mode will be of compact size and original scrollbar size will be displayed on hover/pressed only.</description>
            </item>     
            </list>
            </value>
            <remarks>
            Applicable only for <see href="https://help.syncfusion.com/wpf/themes/skin-manager#themes-list">ThemeStudio supported specific themes</see>
            </remarks>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.Controls">
            <summary>
            Gets or sets the list of controls for which themes have to be applied instead of applying for all controls in application to provide improved performance.
            </summary>
            <example>
            <code language="XAML">
            <![CDATA[
            <Window.Resources>
               <x:Array Type="sys:String" xmlns:sys="clr-namespace:System;assembly=mscorlib" x:Key="controlList">
                    <sys:String>ButtonAdv</sys:String>
               </x:Array>
            </Window.Resources>
            
            <StackPanel syncfusion:SfSkinManager.Theme="{syncfusion:SkinManagerExtension ThemeName=MaterialDark, Controls={StaticResource controlList}}">
                <syncfusion:ButtonAdv Width="100" Grid.Row="0" Content="Testing1" Height="30"   Margin="10"></syncfusion:ButtonAdv>
                <syncfusion:TreeViewAdv Width="100" Grid.Row="2" Margin="10">
                    <syncfusion:TreeViewItemAdv Header="Testing3"/>
                    <syncfusion:TreeViewItemAdv Header="Testing4"/>
                    <syncfusion:TreeViewItemAdv Header="Testing5"/>
                </syncfusion:TreeViewAdv>
            </StackPanel>
            
            ]]>
            </code>
            <code language="C#">
            <![CDATA[
            string[] controls = new string[1] { nameof(ButtonAdv) };
            SfSkinManager.SetTheme(this, new Theme("MaterialDark") { Controls = controls });
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Theme.ThemeResourceDictionary">
            <summary>
            Gets or sets the <see cref="P:Syncfusion.SfSkinManager.Theme.ThemeResourceDictionary"/> value to particular control where <see cref="T:Syncfusion.SfSkinManager.SfSkinManager"/> stores all theme related details
            </summary>
            <value>
            An instance of <see cref="T:Syncfusion.SfSkinManager.ThemeResourceDictionary"/>.
            </value>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.ThemeResourceDictionary">
            <exclude/>
        </member>
        <member name="M:Syncfusion.SfSkinManager.ThemeResourceDictionary.#ctor">
            <exclude/>
        </member>
        <member name="P:Syncfusion.SfSkinManager.ThemeResourceDictionary.ControlsList">
            <summary>
            Stores the list of controls where theme resources are already added. 
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.SfSkinManager.WindowHelper">
            <summary>
            Helper class to process window styles and resources
            </summary>
        </member>
        <member name="F:Syncfusion.SfSkinManager.WindowHelper.WindowMapper">
            <summary>
            Variable to store dictionary of theme based window information 
            </summary>
        </member>
        <member name="M:Syncfusion.SfSkinManager.WindowHelper.GetWindowInfoDictionary(Syncfusion.SfSkinManager.Theme)">
            <summary>
            Helper method to get theme based <see cref="T:Syncfusion.SfSkinManager.WindowInfo"/> instance
            </summary>
            <param name="themeInfo">Theme details</param>
            <returns><see cref="T:Syncfusion.SfSkinManager.WindowInfo"/> instance</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.WindowHelper.GetWindowInfo(System.Type,Syncfusion.SfSkinManager.Theme)">
            <summary>
            Helper method to get window information such as styles and resources
            </summary>
            <param name="windowType">Type of window</param>
            <param name="themeInfo">Theme details</param>
            <returns><see cref="T:Syncfusion.SfSkinManager.WindowInfo"/> instance</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.WindowHelper.ValidateWindowInfo(System.Collections.Generic.Dictionary{System.String,Syncfusion.SfSkinManager.WindowInfo},System.Type,Syncfusion.SfSkinManager.Theme,Syncfusion.SfSkinManager.WindowInfo)">
            <summary>
            Helper method to validate the correct window information based on latest theme design for RibbonWindow
            </summary>
            <param name="windowInfoDictionary">Dictionary of <see cref="T:Syncfusion.SfSkinManager.WindowInfo"/></param>
            <param name="windowType">Type of window</param>
            <param name="themeInfo">Theme details</param>
            <param name="windowInfo"><see cref="T:Syncfusion.SfSkinManager.WindowInfo"/></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.WindowHelper.IsBaseTypeValidation(System.Type,System.Collections.Generic.Dictionary{System.String,Syncfusion.SfSkinManager.WindowInfo})">
            <summary>
            Helper method to determine whether base type validation should be done on specific window type
            </summary>
            <param name="windowType">Type of window</param>
            <returns><see cref="T:System.Boolean"/> value</returns>
        </member>
        <member name="M:Syncfusion.SfSkinManager.WindowHelper.ValidateWindowResource(System.String,System.String)">
            <summary>
            Helper method to put validation condition needed for specific window resource
            </summary>
            <param name="dictionaryName">Control name</param>
            <param name="source">Style path</param>
            <returns><see cref="T:System.Boolean"/> value</returns>
        </member>
        <member name="T:Syncfusion.SfSkinManager.WindowInfo">
            <summary>
            Helper method to store window information
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.WindowInfo.StyleName">
            <summary>
            Property to hold style name of window
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.WindowInfo.StylePath">
            <summary>
            Property to hold window style path
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.WindowInfo.WindowResourceDictionary">
            <summary>
            Property to hold window resources
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.WindowInfo.CanClearResources">
            <summary>
            Property to determine whether we need to clear existing window resources before assigning new resources.
            </summary>
        </member>
        <member name="T:Syncfusion.SfSkinManager.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.SfSkinManager.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:ClassReferenceAttribute">
            <summary>
            Represents a class for the Reference attributes
            </summary>
        </member>
        <member name="P:ClassReferenceAttribute.IsReviewed">
            <summary>
            Returns a value when set
            </summary>
            <value>
            <c>true</c> if instance is created ; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:ClassReferenceAttribute.ShouldInclude">
            <summary>
            Returns a value when set
            </summary>
            <value>
            <c>true</c> if instance is created ; otherwise, <c>false</c>.
            </value>
        </member>
    </members>
</doc>
