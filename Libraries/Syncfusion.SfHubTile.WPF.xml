<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.SfHubTile.Wpf</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Windows.Controls.Notification.MaxImagePosition">
            <summary>
            Type of ImagePosition
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MaxImagePosition.TopLeft">
            <summary>
            Image will be positioned in TopLeft
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MaxImagePosition.TopRight">
            <summary>
            Image will be positioned in TopRight
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MaxImagePosition.BottomLeft">
            <summary>
            Image will be positioned in BottomLeft
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MaxImagePosition.BottomRight">
            <summary>
            Image will be positioned in BottomRight
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.PointerDirection">
            <summary>
             Specify the pointer direction with the control.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.Left">
            <summary>
             Pointer aligned to the left.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.Top">
            <summary>
             Pointer aligned to the top.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.Right">
            <summary>
             Pointer aligned to the right.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.Bottom">
            <summary>
             Pointer aligned to the Bottom.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.Center">
            <summary>
             Pointer aligned to the Center.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.TopLeft">
            <summary>
             Pointer aligned to the TopLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.TopRight">
            <summary>
             Pointer aligned to the TopRight.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.BottomLeft">
            <summary>
             Pointer aligned to the BottomLeft.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.PointerDirection.BottomRight">
            <summary>
             Pointer aligned to the BottomRight.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.AnimationCompletedArgs">
            <summary>
            Arguments for the AnimationCompletedEventHandler
            </summary>
            <remarks>
            Consists of a variable for ContentTransition
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.AnimationCompletedArgs.hubTileTransition">
            <summary>
            Represents hub tile transition
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.AnimationCompletedArgs.#ctor(Syncfusion.Windows.Controls.ContentTransition)">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Controls.Notification.AnimationCompletedArgs"/> class.
            </summary>
            <param name="hubtileTransition">ContentTransition of the Tile</param>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.AnimationCompletedArgs.HubTileTransition">
            <summary>
            Gets the value for ContentTransition
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.HubTileBase">
            <summary>
            Serves as a base for the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/> class.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.GroupNameProperty">
            <summary>
            Using a DependencyProperty as the backing store for GroupName.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.IsFrozenProperty">
            <summary>
            Using a DependencyProperty as the backing store for IsFrozen.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.TitleStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for TitleStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.OverrideDefaultStatesProperty">
            <summary>
            Using a DependencyProperty as the backing store for OverrideDefaultStates.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.AccentBrushProperty">
            <summary>
            Using a DependencyProperty as the backing store for AccentBrush.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.TitleProperty">
            <summary>
            Using a DependencyProperty as the backing store for Title.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.ImageSourceProperty">
            <summary>
            Using a DependencyProperty as the backing store for ImageSource.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.ScaleDepthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ScaleDepth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.TilePressDurationProperty">
            <summary>
            Using a DependencyProperty as the backing store for Duration.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.CommandProperty">
            <summary>
            Using a DependencyProperty as the backing store for Command.  This enables animation, styling, binding, etc...
            </summary>
            <value>The default value is null</value>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.CommandParameterProperty">
            <summary>
            Using a DependencyProperty as the backing store for CommandParameter.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.pointerdirection">
            <summary>
            Represents pointer direction
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.pointerpressed">
            <summary>
            Flag to represents whether the mouse pointer is pressed or not 
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.pointerover">
            <summary>
            Flag to represents whether the mouse pointer is moved into the control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.animation">
            <summary>
            Represents DoubleAnimation
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.pieces">
            <summary>
            contains pointer direction
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.canExecute">
            <summary>
            Represents whether the application is idle to see if the specific command is currently available
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileBase.storyboard">
            <summary>
            Represents the storyboard variable
            </summary>
        </member>
        <member name="E:Syncfusion.Windows.Controls.Notification.HubTileBase.Click">
            <summary>
            Invokes the method for routed events
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.Storyboard">
            <summary>
            Gets or internal set the Storyboard.
            </summary>
            <value>The storyboard.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.IsFrozen">
            <summary>
            Gets or sets a value indicating whether this instance is frozen.
            </summary>
            <value><c>true</c> if this instance is frozen; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.TitleStyle">
            <summary>
            Gets or sets the title style.
            </summary>
            <value>The title style.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.OverrideDefaultStates">
            <summary>
            Gets or sets a value indicating whether to override default states of the tile.
            </summary>
            <value><c>true</c> if override default states; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.AccentBrush">
            <summary>
            Gets or sets the accent brush.
            </summary>
            <value>The accent brush.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.Title">
            <summary>
            Gets or sets the title to show in the tile.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.ImageSource">
            <summary>
            Gets or sets the image to display in the tile.
            </summary>
            <value>The image source.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.ScaleDepth">
            <summary>
            Gets or sets the scale depth.
            </summary>
            <value>The scale depth.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.TilePressDuration">
            <summary>
            Gets or sets the duration of the tile press.
            </summary>
            <value>The duration of the tile press.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.Command">
            <summary>
            Gets or sets the command to be executed when the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/> is pressed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.HubTileBase.CommandParameter">
            <summary>
            Gets or sets the value for the parameter of the command.
            </summary>
            <value>The default value is null</value>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.Dispose">
            <summary>
            Represents dispose method for disposing unwanted objects.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the focus is lost
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the Pointer is released
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the Pointer is pressed
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the Pointer entered
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the Pointer exited
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnIsFrozenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsFrozen property is changed
            </summary>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.OnIsFrozenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Raises when the value of IsFrozen changed
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The Event Arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.ExecutePointerReleased">
            <summary>
            Method which handles Mouse Pointer
            </summary>
            <summary>
            Method for ExecutePointerReleased
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.BuildScaleXAnimation">
            <summary>
            Build Animation for x scale
            </summary>
            <returns>Returns double animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileBase.BuildScaleYAnimation">
            <summary>
            Build animation for scale Y
            </summary>
            <returns>Returns Double animation</returns>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.HubTileService">
            <summary>
            HubTileService that provides the helper methods to <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <remarks>
            Hub Tile Service is a class which provides the helper methods to freeze and
            unfreeze the animation by passing HubTile instance or GroupName as argument.
            </remarks>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.HubTileService.tiles">
            <summary>
            List of WeakReference
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.Freeze(Syncfusion.Windows.Controls.Notification.HubTileBase)">
            <summary>
            Freeze the particular <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <remarks>
            The Return value is void.
            </remarks>
            <param name="tile">one of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.</param>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(System.String)">UnFreeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(System.String)">Freeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">UnFreezee(HubTile)</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.Freeze(System.String)">
            <summary>
             Freeze the particular group of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile">HubTile&apos;s</see>
            </summary>
            <param name="groupname">name of the group.</param>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(System.String)">UnFreeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">Freeze(HubTile)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">UnFreezee(HubTile)</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.UnFreeze(Syncfusion.Windows.Controls.Notification.SfHubTile)">
            <summary>
            Unfreeze the particular <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <remarks>
            The Return value is void.
            </remarks>
            <param name="tile">one of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.</param>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(System.String)">Freeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(System.String)">UnFreeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">Freeze(HubTile)</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.UnFreeze(System.String)">
            <summary>
             UnFreeze the particular group of <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile">HubTile&apos;s</see>
            </summary>
            <param name="groupname">name of the group.</param>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(System.String)">Freeze(String)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.Freeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">Freeze(HubTile)</seealso>
            <seealso
            cref="M:Syncfusion.UI.Xaml.Controls.Notification.HubTileService.UnFreeze(Syncfusion.UI.Xaml.Controls.Notification.HubTile)">UnFreezee(HubTile)</seealso>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.Enqueue(Syncfusion.Windows.Controls.Notification.HubTileBase)">
            <summary>
            Adding reference to the List
            </summary>
            <param name="tile">A Tile to be added in reference list</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.HubTileService.Dequeue(Syncfusion.Windows.Controls.Notification.HubTileBase)">
            <summary>
            Removing reference tile from the List
            </summary>
            <param name="tile">A Tile which is to be removed from Reference List</param>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.SfHubTile">
            <summary>
            HubTile control provides
            notification through various transition effects.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.SecondaryContentProperty">
            <summary>
            Using a DependencyProperty as the backing store for HubTileContent.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.SecondaryContentTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for SecondaryContentTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.HubTileTransitionsProperty">
            <summary>
            Using a DependencyProperty as the backing store for HubTileTransition.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.IntervalProperty">
            <summary>
            Using a DependencyProperty as the backing store for Duration.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.partSlideRoot">
            <summary>
            Represents the root of the slide
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.partLayoutRoot">
            <summary>
            Represents root grid layout
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.partHubTileContent">
            <summary>
            Represents content of the HubTile
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.partRoot">
            <summary>
            Represents the root grid element which contains all child elements
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.timer">
            <summary>
            Represents the Dispatcher timer variable
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.story">
            <summary>
            Represents the storyboard variable
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.fadetileflag">
            <summary>
            Flag to indicate the tile is fade or not
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.currentTransition">
            <summary>
            Represents current transition of the tile
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfHubTile.random">
            <summary>
            Represents random integer variable
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Controls.Notification.SfHubTile"/> class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimationCompletedEventHandler">
            <summary>
            Acts as an event handler when the animation is completed.
            </summary>
            <param name="Sender">The Source of the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="E:Syncfusion.Windows.Controls.Notification.SfHubTile.HubTileTransitionCompleted">
            <summary>
            Invokes the event when the HubTileTransition is completed.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfHubTile.SecondaryContent">
            <summary>
            Gets or sets the secondary content to displayed with <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <value>
            The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfHubTile.SecondaryContentTemplate">
            <summary>
            Gets or sets the template for the secondary content to displayed with <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <value>
            The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfHubTile.HubTileTransitions">
            <summary>
            Gets or sets <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTileTransitionCollection"/> that specifies transitions
            with <see cref="T:Syncfusion.UI.Xaml.Controls.Notification.HubTile"/>.
            </summary>
            <value>
            The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfHubTile.Interval">
            <summary>
            Gets or sets the number of milliseconds to wait before initiating a PostBack.
            </summary>
            <value>
            It accepts the type of <see cref="T:System.TimeSpan"/>, The default values is
            0 <see cref="P:System.TimeSpan.Milliseconds"/>.
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.OnApplyTemplate">
            <summary>
            Initializes all the child elements of the <see 
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.SfHubTile"/>
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.Dispose">
            <summary>
            Represents dispose method for disposing unwanted objects
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.Dispose(System.Boolean)">
            <summary>
            Disposing unused objects
            </summary>
            <param name="disposing">Argument to dispose the unused object</param>        
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.OnIsFrozenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsFrozen property is changed
            </summary>
            <param name="e">Event arguments</param>
            <value> Timer is
            <c>Stop</c> if IsFrozen is True; otherwise, <c>Start</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.OnIntervalChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the interval is changed
            </summary>
            <param name="sender">source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.BuildTimeLine(System.Double,System.Double,System.TimeSpan,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Building double animation
            </summary>
            <param name="from">Starting value of the transition</param>
            <param name="to">Ending value of the transition</param>
            <param name="duration">Duration of the transition</param>
            <param name="easing">Easing function</param>
            <returns>Build double animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.BuildObjectTimeline(System.Object,System.TimeSpan)">
            <summary>
            Building Object Animation
            </summary>
            <param name="visibility">Visibility of the element</param>
            <param name="duration">Duration of the animation</param>
            <returns>Build object animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.HubTile_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the unloaded event of HubTile control
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.HubTile_Loaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handle the loaded event of HubTile control
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when IsEnabled property is changed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="dependencyPropertyChangedEventArgs">The Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.UpdateVisualState">
            <summary>
            Update visual state of the control
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.UpdateFadeTile(Syncfusion.Windows.Controls.FadeTransition)">
            <summary>
            Update Fade Animation to the Tile
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.UpdateSlideTile(Syncfusion.Windows.Controls.SlideTransition)">
            <summary>
            Update Slide Animation to the Tile
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateRotateSlideTransition(Syncfusion.Windows.Controls.SlideTransition)">
            <summary>
            SlideAnimation to rotate the Content Transition 
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateDownSlideTransition(Syncfusion.Windows.Controls.SlideTransition)">
            <summary>
            SlideAnimation of the Tile in Downwards direction
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateDefaultSlideTransition(Syncfusion.Windows.Controls.SlideTransition)">
            <summary>
            SlideAnimation of the Tile in default direction
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.UpdateRotateTile(Syncfusion.Windows.Controls.RotateTransition)">
            <summary>
            Update the content rotation
            </summary>
            <param name="transition">ContentTransition of the Tile</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateRotateContent(System.Windows.FrameworkElement,System.Double,System.Double,System.TimeSpan,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Animation to rotate the content
            </summary>
            <param name="displayelement">element for animation</param>
            <param name="from">from value</param>
            <param name="to">to value</param>
            <param name="duration">animation duration</param>
            <param name="easing">Easing function</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateFadeContent(System.Double,System.TimeSpan,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Animation to fade the content
            </summary>
            <param name="hubcontentto">ending value of transition</param>
            <param name="duration">duration of the transition</param>
            <param name="easing">easing function</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.AnimateSlideContent(System.Double,System.Double,System.Double,System.Double,System.TimeSpan,System.Windows.Media.Animation.EasingFunctionBase)">
            <summary>
            Animate Slide content
            </summary>
            <param name="slidefromvalue">Starting value of transition - first Timeline</param>
            <param name="slidetovalue">Ending value of the transition - first Timeline</param>
            <param name="rootfromvalue">Starting value of transition - second Timeline</param>
            <param name="roottovalue">Ending value of the transition - second Timeline</param>
            <param name="duration">Animation duration</param>
            <param name="easing">Easing function</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.CheckWhetherMovetoNextIteration">
            <summary>
            Check the transition whether it is movable for next iteration
            </summary>
            <returns>If the transition is movable, it returns true otherwise false</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.Timer_Tick(System.Object,System.Object)">
            <summary>
            Handler executes when a DispatchTimer is started on a given Interval.
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.MoveToNextIteration">
            <summary>
            Moving the transition to next iteration
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfHubTile.UpdateTransition(Syncfusion.Windows.Controls.ContentTransition)">
            <summary>
            Updating the content transition
            </summary>
            <param name="transition">Content transition of the element</param>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.SfPulsingTile">
            <summary>
            PulsingTile Control resembles
            the Music and Video hub tile in Windows phone. The content will zooms
            out/in randomly and show a translation movement in X and Y axis randomly.
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.RadiusXProperty">
            <summary>
            Using a DependencyProperty as the backing store for RadiusX.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.RadiusYProperty">
            <summary>
            Using a DependencyProperty as the backing store for RadiusY.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.PulseDurationProperty">
            <summary>
            Using a DependencyProperty as the backing store for PulseDuration.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.TranslateDurationProperty">
            <summary>
            Using a DependencyProperty as the backing store for TranslateDuration.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.PulseScaleProperty">
            <summary>
            Using a DependencyProperty as the backing store for PulseScale.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.partContent">
            <summary>
            Content of the Tile
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.rotationStroyboard">
            <summary>
            Represents Rotation storyboard
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.SfPulsingTile.pulseStroyboard">
            <summary>
            Represents pulse storyboard
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Controls.Notification.SfPulsingTile"/> class.
            </summary> 
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfPulsingTile.RadiusX">
            <summary>
            Gets or sets the value that specify the radius X with <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile"/>.
            </summary>
            <value>
            The default values is zero.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile.RadiusY"/>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfPulsingTile.RadiusY">
            <summary>
            Gets or sets the value that specify the radius Y with <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile"/>.
            </summary>
            <value>
            The default values is zero.
            </value>
            <seealso cref="P:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile.RadiusX"/>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfPulsingTile.PulseDuration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> that specify the pulse duration
            for animation.
            </summary>
            <value>
            The default value is 4 <see cref="P:System.TimeSpan.Milliseconds"/>.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile.TranslateDuration"/>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfPulsingTile.TranslateDuration">
            <summary>
            Gets or sets the <see cref="T:System.TimeSpan"/> that specify the translate
            duration for animation.
            </summary>
            <value>
            The default value is 4 <see cref="P:System.TimeSpan.Milliseconds"/>.
            </value>
            <seealso
            cref="P:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile.PulseDuration"/>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.SfPulsingTile.PulseScale">
            <summary>
            Gets or sets the scale value for animation
            </summary>
            <value>
            The default value is 1.
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.OnApplyTemplate">
            <summary>
            Initializes all the child elements of the <see
            cref="T:Syncfusion.UI.Xaml.Controls.Notification.PulsingTile"/> control.
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.OnIsFrozenChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsFrozen property is changed
            </summary>
            <param name="e">Event Arguments</param>
            <value> pulseStroyboard is
            <c>Stop</c> if IsFrozen is True; otherwise, <c>Begin</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.OnValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when Value changed
            </summary>
            <param name="sender">source of the event</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the loaded event of the control
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments </param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.OnIsEnabledChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invokes when IsEnabled property is changed
            </summary>
            <param name="sender">Source of the event</param>
            <param name="dependencyPropertyChangedEventArgs">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.PulsingTile_Unloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles unloaded event of the PulsingTile control
            </summary>
            <param name="sender">Source of the event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.UpdateVisualState">
            <summary>
            Update VisualState of the control
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.StartAnimation">
            <summary>
            Starting Animation of the Tile
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.StopAnimation">
            <summary>
            Stop Animation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.AnimateContent">
            <summary>
            Content Animation
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.BuildXTimeLine(System.Double,System.Double)">
            <summary>
            Build double animation in x direction
            </summary>
            <param name="radiusx">x direction</param>
            <param name="radiusy">y direction</param>
            <returns>Double animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.BuildYTimeLine(System.Double,System.Double)">
            <summary>
            Build double animation in y direction
            </summary>
            <param name="radiusx">x direction</param>
            <param name="radiusy">y direction</param>
            <returns>Double animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.BuildPulseXTimeLine(System.Double)">
            <summary>
            Build pulse animation in x direction
            </summary>
            <param name="pulseScale">scale of transition</param>
            <returns>Pulse animation</returns>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.SfPulsingTile.BuildPulseYTimeLine(System.Double)">
            <summary>
            Build pulse animation in y direction
            </summary>
            <param name="pulseScale">scale of transition</param>
            <returns>Pulse animation</returns>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.HubTileTransitionCollection">
            <summary>
            HubTileTransitionCollection is a collection of <see
            cref="N:Windows.UI.Xaml.Controls.ContentTransition"/>.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.ImageList">
            <summary>
             Image list is a collection of image locations.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.MosaicTileContent">
            <summary>
            Represents a MosaicTileContent Control
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.ImageProperty">
            <summary>
            Using a DependencyProperty as the backing store for Image.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.ImageWidthProperty">
            <summary>
            Using a DependencyProperty as the backing store for ImageWidth.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.ImageHeightProperty">
            <summary>
            Using a DependencyProperty as the backing store for ImageHeight.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.HorizontalImageAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for HorizontalImageAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.VerticalImageAlignmentProperty">
            <summary>
            Using a DependencyProperty as the backing store for VerticalImageAlignment.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.BackgroundProperty">
            <summary>
            Using a DependencyProperty as the backing store for Background.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Controls.Notification.MosaicTileContent.OpacityProperty">
            <summary>
            Using a DependencyProperty as the backing store for Opacity.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Controls.Notification.MosaicTileContent.#ctor">
            <summary>
            Initializes a new instance of the <see
            cref="T:Syncfusion.Windows.Controls.Notification.MosaicTileContent"/> class.
            </summary>     
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.ImageWidth">
            <summary>
            Gets or sets the width of the image.
            </summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.ImageHeight">
            <summary>
            Gets or sets the height of the image.
            </summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.HorizontalImageAlignment">
            <summary>
            Gets or sets the horizontal alignment of the image.
            </summary>
            <value>The horizontal image alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.VerticalImageAlignment">
            <summary>
            Gets or sets the vertical alignment of the image.
            </summary>
            <value>The vertical image alignment.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.Background">
            <summary>
            Gets or sets the background.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.MosaicTileContent.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>The opacity.</value>
        </member>
        <member name="T:Syncfusion.Windows.Controls.Notification.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Controls.Notification.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Syncfusion.Windows.Converters.RandomBrushConverter">
            <summary>
            Brush convertor
            </summary>
        </member>
        <member name="M:Syncfusion.Windows.Converters.RandomBrushConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts into brush
            </summary>
            <param name="value">input value</param>
            <param name="targetType">target type</param>
            <param name="parameter">input parameter</param>
            <param name="language">input language</param>
            <returns>converted value as object</returns>
        </member>
        <member name="M:Syncfusion.Windows.Converters.RandomBrushConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the value back into the object
            </summary>
            <param name="value">input value</param>
            <param name="targetType">target type</param>
            <param name="parameter">input parameter</param>
            <param name="language">input language</param>
            <returns>converted value as object</returns>
        </member>
        <member name="T:Syncfusion.Windows.Primitives.HeaderedContentControl">
            <summary>
            Represents a control with header content
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderTemplateSelectorProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderTemplateSelector.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderProperty">
            <summary>
            Using a DependencyProperty as the backing store for Header.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderStyleProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderStyle.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <member name="F:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Using a DependencyProperty as the backing store for HeaderTemplate.  This enables animation, styling, binding, etc...
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Syncfusion.Windows.Primitives.HeaderedContentControl.#ctor" -->
        <member name="P:Syncfusion.Windows.Primitives.HeaderedContentControl.Header">
            <summary>
            Gets or sets the data used as header
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderStyle">
            <summary>
            Gets or sets the style for the data used as header
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the template for the data used as header
            </summary>
        </member>
        <member name="P:Syncfusion.Windows.Primitives.HeaderedContentControl.HeaderTemplateSelector">
            <summary>
            Gets or sets the TemplateSelector for the data used as header
            </summary>
        </member>
        <member name="T:Syncfusion.SfHubTileBaseAssembly">
            <summary>
            SharedBase assembly class.
            </summary>
            <exclude/>
        </member>
        <member name="F:Syncfusion.SfHubTileBaseAssembly.Name">
            <summary>
            Name of the assembly.
            </summary>
        </member>
        <member name="F:Syncfusion.SfHubTileBaseAssembly.Assembly">
            <summary>
            Defines assembly object reference variable.
            </summary>
        </member>
        <member name="F:Syncfusion.SfHubTileBaseAssembly.RootNamespace">
            <summary>
            Root namespace of the assembly.
            </summary>
        </member>
        <member name="M:Syncfusion.SfHubTileBaseAssembly.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Syncfusion.SfHubTileBaseAssembly"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.SfHubTileBaseAssembly.AssemblyResolver(System.Object,System.ResolveEventArgs)">
            <summary>
            Assemblies the resolver.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ResolveEventArgs"/> instance containing the event data.</param>
            <returns>Assembly object.</returns>
        </member>
        <member name="T:Syncfusion.AssemblyInfo">
            <summary>
            Represents a class for the Reference attributes
            </summary>
            <summary>
            Assembly info class
            </summary>
        </member>
    </members>
</doc>
